{"version":3,"sources":["webpack://adEngine/webpack/bootstrap","webpack://adEngine/external \"@wikia/ad-engine\"","webpack://adEngine/external \"babel-runtime/helpers/createClass\"","webpack://adEngine/external \"babel-runtime/helpers/classCallCheck\"","webpack://adEngine/external \"babel-runtime/core-js/promise\"","webpack://adEngine/external \"babel-runtime/core-js/object/keys\"","webpack://adEngine/external \"babel-runtime/core-js/object/assign\"","webpack://adEngine/external \"babel-runtime/core-js/set\"","webpack://adEngine/external \"babel-runtime/helpers/toConsumableArray\"","webpack://adEngine/external \"babel-runtime/core-js/object/entries\"","webpack://adEngine/external \"babel-runtime/helpers/slicedToArray\"","webpack://adEngine/./src/ad-services/bill-the-lizard/executor.js","webpack://adEngine/./src/ad-services/bill-the-lizard/projects-handler.js","webpack://adEngine/./src/ad-services/bill-the-lizard/index.js","webpack://adEngine/./src/ad-services/confiant/index.js","webpack://adEngine/./src/ad-services/geo-edge/index.js","webpack://adEngine/./src/ad-services/krux/index.js","webpack://adEngine/./src/ad-services/moat-yi/index.js","webpack://adEngine/./src/ad-services/nielsen/static-queue-script.js","webpack://adEngine/./src/ad-services/nielsen/index.js","webpack://adEngine/./src/ad-services/index.js"],"names":["logGroup","Executor","methods","name","callback","utils","logger","methodName","model","prediction","Error","models","response","forEach","modelName","result","executableModel","find","executable","definedMethods","execute","ProjectsHandler","projects","projectNames","context","get","projectParameters","enabledProjectNames","filter","isEnabled","includes","parameters","isNextModelExecutable","isProperGeo","countries","push","openRequests","events","registerEvent","buildQueryUrl","queryParameters","params","key","encodeURI","join","buildUrl","host","endpoint","query","httpRequest","timeout","callId","request","window","XMLHttpRequest","url","emit","BILL_THE_LIZARD_REQUEST","open","responseType","resolve","reject","addEventListener","onreadystatechange","readyState","status","send","getQueryParameters","now","Date","day","getDay","map","h","getHours","dow","overridePredictions","newValue","queryString","parseInt","BillTheLizard","executor","projectsHandler","targetedModelNames","callCounter","predictions","statuses","req","abort","remove","getEnabledModelsWithParams","length","NOT_USED","dfp_targeting","add","TOO_LATE","catch","error","message","TIMEOUT","FAILURE","then","ON_TIME","modelToResultMap","getModelToResultMap","buildPredictions","setTargeting","BILL_THE_LIZARD_RESPONSE","serialize","executeMethods","undefined","targeting","getTargeting","serializedTargeting","set","latestResults","pred","has","getPredictions","separator","split","startId","callIdBuilder","backCounter","prevStatus","getResponseStatus","getPrediction","REUSED","billTheLizard","scriptDomain","loadScript","confiantLibraryUrl","scriptLoader","Confiant","propertyId","mapping","activation","_clrm","gpt","confiantCdn","sandbox","args","confiant","scriptDomainId","geoEdgeLibraryUrl","GeoEdge","geoEdgeKey","geoEdgeConfig","grumi","cfg","geoEdge","kruxId","kruxLibraryUrl","id","getKruxData","localStorage","navigator","cookieEnabled","match","document","cookie","decodeURI","Krux","q","exportPageParams","importUserData","value","user","segments","krux","partnerCode","MoatYi","moatYeildReadyResolve","promise","moatYieldReady","importPageParams","moatPrebidApi","getMoatTargetingForPage","pageParams","m_data","MOAT_YI_READY","moatYi","initNielsenStaticQueue","t","n","nlsQ","e","o","c","r","s","i","createElement","async","src","location","protocol","getElementsByTagName","parentNode","insertBefore","g","ggPM","nlsnConfig","createInstance","nielsenKey","NOLBUNDLE","Nielsen","nlsnInstance","nol_sdkDebug","nielsenMetadata","nielsen"],"mappings":"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","file":"ad-services.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = require(\"@wikia/ad-engine\");","module.exports = require(\"babel-runtime/helpers/createClass\");","module.exports = require(\"babel-runtime/helpers/classCallCheck\");","module.exports = require(\"babel-runtime/core-js/promise\");","module.exports = require(\"babel-runtime/core-js/object/keys\");","module.exports = require(\"babel-runtime/core-js/object/assign\");","module.exports = require(\"babel-runtime/core-js/set\");","module.exports = require(\"babel-runtime/helpers/toConsumableArray\");","module.exports = require(\"babel-runtime/core-js/object/entries\");","module.exports = require(\"babel-runtime/helpers/slicedToArray\");","import { utils } from '@wikia/ad-engine';\n\nconst logGroup = 'executor';\n\n/**\n * Bill the Lizard methods executor\n */\nexport class Executor {\n\tconstructor() {\n\t\tthis.methods = {};\n\t}\n\n\t/**\n\t * Registeres new method\n\t * @param {string} name\n\t * @param {function} callback\n\t */\n\tregister(name, callback) {\n\t\tutils.logger(logGroup, `method ${name} registered`);\n\t\tthis.methods[name] = callback;\n\t}\n\n\t/**\n\t * Executes method by name\n\t * @param {string} methodName\n\t * @param {ModelDefinition} model\n\t * @param {number|undefined} prediction\n\t */\n\texecute(methodName, model, prediction) {\n\t\tconst callback = this.methods[methodName];\n\n\t\tif (typeof callback !== 'function') {\n\t\t\tthrow Error(`${methodName} is not executable`);\n\t\t}\n\n\t\tutils.logger(logGroup, `executing ${methodName} method`, model.name, prediction);\n\t\tcallback(model, prediction);\n\t}\n\n\t/**\n\t * Executes all methods defined in given model based on service response\n\t * @param {ModelDefinition[]} models\n\t * @param {Object} response\n\t */\n\texecuteMethods(models, response) {\n\t\tObject.keys(response).forEach((modelName) => {\n\t\t\tconst { result } = response[modelName];\n\n\t\t\tconst executableModel = models.find((model) => model.name === modelName && model.executable);\n\n\t\t\tif (!executableModel) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst definedMethods = executableModel[`on_${result}`];\n\n\t\t\tif (!definedMethods) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdefinedMethods.forEach((methodName) => this.execute(methodName, executableModel, result));\n\t\t});\n\t}\n}\n","import { context, utils } from '@wikia/ad-engine';\n\nconst logGroup = 'project-handler';\n\n/**\n * Bill the Lizard projects handler\n */\nexport class ProjectsHandler {\n\tconstructor() {\n\t\tthis.projects = {};\n\t}\n\n\t/**\n\t * Enables project by name\n\t * @param {string} name\n\t */\n\tenable(name) {\n\t\tutils.logger(logGroup, `project ${name} enabled`);\n\t\tthis.projects[name] = true;\n\t}\n\n\t/**\n\t * Checks whether project is enabled\n\t * @param {string} name\n\t * @returns {boolean}\n\t */\n\tisEnabled(name) {\n\t\treturn !!this.projects[name];\n\t}\n\n\t/**\n\t * Returns all geo-enabled models' definitions based on enabled projects\n\t * @param {string[]} projectNames\n\t * @returns {{models: ModelDefinition[], parameters: Object}}\n\t */\n\tgetEnabledModelsWithParams(projectNames) {\n\t\tconst projects = context.get('services.billTheLizard.projects');\n\t\tconst projectParameters = context.get('services.billTheLizard.parameters');\n\t\tconst enabledProjectNames = Object.keys(projects).filter(\n\t\t\t(name) => this.isEnabled(name) && projectNames.includes(name),\n\t\t);\n\t\tconst models = [];\n\t\tconst parameters = {};\n\n\t\tenabledProjectNames.forEach((name) => {\n\t\t\t// Only first enabled model in project is executable\n\t\t\tlet isNextModelExecutable = true;\n\n\t\t\tprojects[name].forEach((model) => {\n\t\t\t\tif (utils.isProperGeo(model.countries, model.name)) {\n\t\t\t\t\tmodel.executable = isNextModelExecutable;\n\t\t\t\t\tisNextModelExecutable = false;\n\t\t\t\t\tmodels.push(model);\n\t\t\t\t\tObject.assign(parameters, projectParameters[name]);\n\t\t\t\t} else {\n\t\t\t\t\tmodel.executable = false;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn {\n\t\t\tmodels,\n\t\t\tparameters,\n\t\t};\n\t}\n}\n","import { context, events, utils } from '@wikia/ad-engine';\nimport { Executor } from './executor';\nimport { ProjectsHandler } from './projects-handler';\n\n/**\n * @typedef {Object} ModelDefinition\n * @property {boolean|undefined} executable\n * @property {string[]} countries\n * @property {string} name\n * @property {function} on_*\n */\n\n/**\n * @typedef {Object} PredictionDefinition\n * @property {string} modelName\n * @property {result} number\n * @property {(number|string)} callId\n */\n\nconst logGroup = 'bill-the-lizard';\nlet openRequests = [];\n\nevents.registerEvent('BILL_THE_LIZARD_REQUEST');\nevents.registerEvent('BILL_THE_LIZARD_RESPONSE');\n\n/**\n * Builds query parameters for url\n * @param {Object} queryParameters (key-value pairs for query parameters)\n * @returns {string}\n */\nfunction buildQueryUrl(queryParameters) {\n\tconst params = [];\n\n\tObject.keys(queryParameters).forEach((key) => {\n\t\tparams.push(`${key}=${queryParameters[key]}`);\n\t});\n\n\treturn encodeURI(params.join('&'));\n}\n\n/**\n * Builds endpoint url\n * @param {string} host\n * @param {string} endpoint\n * @param {string} query\n * @returns {string}\n */\nfunction buildUrl(host, endpoint, query) {\n\treturn `${host}/${endpoint}?${query}`;\n}\n\n/**\n * Requests service\n * @param {string} host\n * @param {string} endpoint\n * @param {Object} queryParameters (key-value pairs for query parameters)\n * @param {number} timeout\n * @param {number|string} callId\n * @returns {Promise}\n */\nfunction httpRequest(host, endpoint, queryParameters = {}, timeout = 0, callId) {\n\tconst request = new window.XMLHttpRequest();\n\tconst query = buildQueryUrl(queryParameters);\n\tconst url = buildUrl(host, endpoint, query);\n\n\tevents.emit(events.BILL_THE_LIZARD_REQUEST, {\n\t\tquery,\n\t\tcallId,\n\t});\n\n\trequest.open('GET', url, true);\n\trequest.responseType = 'json';\n\trequest.timeout = timeout;\n\n\topenRequests.push(request);\n\n\tutils.logger(logGroup, 'timeout configured to', request.timeout);\n\n\treturn new Promise((resolve, reject) => {\n\t\trequest.addEventListener('timeout', () => {\n\t\t\treject(new Error('timeout'));\n\t\t\tutils.logger(logGroup, 'timed out');\n\t\t});\n\t\trequest.addEventListener('error', () => {\n\t\t\treject(new Error('error'));\n\t\t\tutils.logger(logGroup, 'errored');\n\t\t});\n\t\trequest.onreadystatechange = function () {\n\t\t\tif (this.readyState === 4 && this.status === 200) {\n\t\t\t\tutils.logger(logGroup, 'has response');\n\t\t\t\tresolve(this.response);\n\t\t\t}\n\t\t};\n\t\trequest.send();\n\t});\n}\n\n/**\n * Builds key-value pairs for query parameters\n * @param {ModelDefinition[]} models\n * @param {Object} parameters (key-value pairs)\n * @returns {Object}\n */\nfunction getQueryParameters(models, parameters) {\n\tconst now = new Date();\n\tconst day = now.getDay() - 1;\n\n\treturn Object.assign(\n\t\t{},\n\t\t{\n\t\t\tmodels: models.map((model) => model.name),\n\t\t\th: now.getHours(),\n\t\t\tdow: day === -1 ? 6 : day,\n\t\t},\n\t\tparameters,\n\t);\n}\n\n/**\n * Overrides predictions based on response\n * @param {Object} response\n * @returns {Object}\n */\nfunction overridePredictions(response) {\n\tObject.keys(response).forEach((name) => {\n\t\tconst newValue = utils.queryString.get(`bill.${name}`);\n\n\t\tif (newValue) {\n\t\t\tresponse[name].result = parseInt(newValue, 10);\n\t\t}\n\t});\n\n\treturn response;\n}\n\n/**\n * Bill the Lizard service handler\n */\nexport class BillTheLizard {\n\tstatic FAILURE = 'failure';\n\tstatic NOT_USED = 'not_used';\n\tstatic ON_TIME = 'on_time';\n\tstatic TIMEOUT = 'timeout';\n\tstatic TOO_LATE = 'too_late';\n\tstatic REUSED = 'reused';\n\n\tconstructor() {\n\t\tthis.executor = new Executor();\n\t\tthis.projectsHandler = new ProjectsHandler();\n\t\tthis.targetedModelNames = new Set();\n\n\t\tthis.callCounter = 0;\n\t\tthis.predictions = [];\n\t\tthis.statuses = {};\n\t}\n\n\treset() {\n\t\tthis.callCounter = 0;\n\t\tthis.predictions = [];\n\t\tthis.statuses = {};\n\n\t\topenRequests.forEach((req) => req.abort());\n\t\topenRequests = [];\n\t\tcontext.remove('targeting.btl');\n\t}\n\n\t/**\n\t * Requests service, executes defined methods and parses response\n\t *\n\t * Supply callKey if you need to access status for this specific request.\n\t * DO NOT use an integer as callKey as it's the default value.\n\t * Good key example: \"incontent_boxad1\".\n\t *\n\t * @param {string[]} projectNames\n\t * @param {string} callId key for this call\n\t * @returns {Promise}\n\t */\n\tcall(projectNames, callId) {\n\t\tif (!context.get('services.billTheLizard.enabled')) {\n\t\t\tutils.logger(logGroup, 'disabled');\n\n\t\t\treturn new Promise((resolve, reject) => reject(new Error('Disabled')));\n\t\t}\n\n\t\tif (!callId) {\n\t\t\tthis.callCounter += 1;\n\t\t\tcallId = this.callCounter;\n\t\t}\n\n\t\tconst host = context.get('services.billTheLizard.host');\n\t\tconst endpoint = context.get('services.billTheLizard.endpoint');\n\t\tconst timeout = context.get('services.billTheLizard.timeout');\n\t\tconst { models, parameters } = this.projectsHandler.getEnabledModelsWithParams(projectNames);\n\n\t\tif (!models || models.length < 1) {\n\t\t\tutils.logger(logGroup, 'no models to predict');\n\t\t\tthis.statuses[callId] = BillTheLizard.NOT_USED;\n\n\t\t\treturn Promise.resolve({});\n\t\t}\n\n\t\t// update names of GAM targeted models\n\t\tmodels\n\t\t\t.filter((model) => model.dfp_targeting)\n\t\t\t.forEach((model) => this.targetedModelNames.add(model.name));\n\n\t\tconst queryParameters = getQueryParameters(models, parameters);\n\n\t\tutils.logger(logGroup, 'calling service', host, endpoint, queryParameters, `callId: ${callId}`);\n\n\t\tthis.statuses[callId] = BillTheLizard.TOO_LATE;\n\n\t\treturn httpRequest(host, endpoint, queryParameters, timeout, callId)\n\t\t\t.catch((error) => {\n\t\t\t\tif (error.message === 'timeout') {\n\t\t\t\t\tthis.statuses[callId] = BillTheLizard.TIMEOUT;\n\t\t\t\t} else {\n\t\t\t\t\tthis.statuses[callId] = BillTheLizard.FAILURE;\n\t\t\t\t}\n\n\t\t\t\treturn Promise.reject(error);\n\t\t\t})\n\t\t\t.then((response) => overridePredictions(response))\n\t\t\t.then((response) => {\n\t\t\t\tutils.logger(logGroup, 'service response OK', `callId: ${callId}`);\n\n\t\t\t\tthis.statuses[callId] = BillTheLizard.ON_TIME;\n\n\t\t\t\tconst modelToResultMap = this.getModelToResultMap(response);\n\n\t\t\t\tutils.logger(logGroup, 'predictions', modelToResultMap, `callId: ${callId}`);\n\n\t\t\t\tconst predictions = this.buildPredictions(models, modelToResultMap, callId);\n\n\t\t\t\tthis.predictions.push(...predictions);\n\n\t\t\t\tthis.setTargeting();\n\n\t\t\t\tevents.emit(events.BILL_THE_LIZARD_RESPONSE, {\n\t\t\t\t\tcallId,\n\t\t\t\t\tresponse: this.serialize(callId),\n\t\t\t\t});\n\n\t\t\t\tthis.executor.executeMethods(models, response);\n\n\t\t\t\treturn modelToResultMap;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tutils.logger(logGroup, 'service response', error.message, `callId: ${callId}`);\n\n\t\t\t\treturn {};\n\t\t\t});\n\t}\n\n\t/**\n\t *\n\t * @param {ModelDefinition[]} models\n\t * @param {Object.<string, number>} modelToResultMap\n\t * @param {number|string} callId\n\t * @returns {PredictionDefinition[]}\n\t */\n\tbuildPredictions(models, modelToResultMap, callId) {\n\t\treturn models\n\t\t\t.map((model) => model.name)\n\t\t\t.filter((modelName) => modelToResultMap[modelName] !== undefined)\n\t\t\t.map((modelName) => ({ modelName, callId, result: modelToResultMap[modelName] }));\n\t}\n\n\t/**\n\t * Converts response to predictions\n\t * @param {Object} response\n\t * @returns {PredictionDefinition}\n\t */\n\tgetModelToResultMap(response) {\n\t\tconst modelToResultMap = {};\n\n\t\tObject.keys(response).forEach((modelName) => {\n\t\t\tconst { result } = response[modelName];\n\n\t\t\tif (typeof result !== 'undefined') {\n\t\t\t\tmodelToResultMap[modelName] = result;\n\t\t\t}\n\t\t});\n\n\t\treturn modelToResultMap;\n\t}\n\n\t/**\n\t * Sets DFP targeting in context.\n\t *\n\t * @returns string\n\t */\n\tsetTargeting() {\n\t\tconst targeting = this.getTargeting();\n\n\t\tif (Object.keys(targeting).length > 0) {\n\t\t\tconst serializedTargeting = Object.entries(targeting).map(\n\t\t\t\t([modelName, result]) => `${modelName}_${result}`,\n\t\t\t);\n\n\t\t\tcontext.set('targeting.btl', serializedTargeting);\n\n\t\t\treturn serializedTargeting;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t/**\n\t * Returns map of targeted models to their results.\n\t *\n\t * For each model, it takes the latest result.\n\t *\n\t * @returns {Object.<string, number>}\n\t */\n\tgetTargeting() {\n\t\tconst latestResults = {};\n\n\t\tthis.predictions\n\t\t\t.filter((pred) => this.targetedModelNames.has(pred.modelName))\n\t\t\t.forEach((pred) => {\n\t\t\t\tlatestResults[pred.modelName] = pred.result;\n\t\t\t});\n\n\t\treturn latestResults;\n\t}\n\n\t/**\n\t * Get prediction by modelName and callId.\n\t *\n\t * @param {string} modelName\n\t * @param {(number|string)} callId\n\t * @returns {PredictionDefinition}\n\t */\n\tgetPrediction(modelName, callId) {\n\t\treturn this.getPredictions(modelName).find((pred) => pred.callId === callId);\n\t}\n\n\t/**\n\t * Returns predictions optionally filtered by model name.\n\t *\n\t * If model name is given, it returns all predictions with models matching.\n\t * Model matches when raw name (without version) is matched.\n\t *\n\t * @param {string} [modelName]\n\t * @returns {PredictionDefinition[]}\n\t */\n\tgetPredictions(modelName) {\n\t\tconst separator = ':';\n\n\t\tif (modelName) {\n\t\t\treturn this.predictions.filter(\n\t\t\t\t(pred) => pred.modelName.split(separator)[0] === modelName.split(separator)[0],\n\t\t\t);\n\t\t}\n\n\t\treturn this.predictions;\n\t}\n\n\t/**\n\t * Returns response status (one of: failure, not_used, on_time, timeout, too_late or undefined);\n\t *\n\t * If callId is not supplied, the latest response without a specific key is returned.\n\t *\n\t * @param {number|string} [callId] value passed as key for call\n\t * @returns {string}\n\t */\n\tgetResponseStatus(callId) {\n\t\tcallId = callId || this.callCounter;\n\n\t\treturn this.statuses[callId];\n\t}\n\n\t/**\n\t * Serializes all predictions\n\t * @param {number|string} [callId]\n\t * @returns {string}\n\t */\n\tserialize(callId) {\n\t\tlet { predictions } = this;\n\n\t\tif (callId !== undefined) {\n\t\t\tpredictions = predictions.filter((pred) => pred.callId === callId);\n\t\t}\n\n\t\treturn predictions.map((pred) => `${pred.modelName}|${pred.callId}=${pred.result}`).join(',');\n\t}\n\n\t/**\n\t * Get prediction of previous calls.\n\t *\n\t * Uses a supplied callIdBuilder to construct callId\n\t * by iterating down from startId to 2.\n\t *\n\t * @param {number} startId\n\t * @param {function} callIdBuilder\n\t * @param {string} modelName\n\t * @returns {number | undefined}\n\t */\n\tgetPreviousPrediction(startId, callIdBuilder, modelName) {\n\t\tif (startId <= 1) {\n\t\t\treturn undefined;\n\t\t}\n\t\tfor (let backCounter = startId - 1; backCounter > 1; backCounter--) {\n\t\t\tconst callId = callIdBuilder(backCounter);\n\t\t\tconst prevStatus = this.getResponseStatus(callId);\n\n\t\t\tif (prevStatus === BillTheLizard.ON_TIME || prevStatus === BillTheLizard.TOO_LATE) {\n\t\t\t\treturn this.getPrediction(modelName, callId);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nexport const billTheLizard = new BillTheLizard();\n","import { context, utils } from '@wikia/ad-engine';\n\nconst logGroup = 'confiant';\nconst scriptDomain = 'clarium.global.ssl.fastly.net';\n\n/**\n * Injects Confiant script\n * @returns {Promise}\n */\nfunction loadScript() {\n\tconst confiantLibraryUrl = `//${scriptDomain}/gpt/a/wrap.js`;\n\n\treturn utils.scriptLoader.loadScript(confiantLibraryUrl, 'text/javascript', true, 'first');\n}\n\n/**\n * Confiant service handler\n */\nclass Confiant {\n\t/**\n\t * Requests service and injects script tag\n\t * @returns {Promise}\n\t */\n\tcall() {\n\t\tconst propertyId = context.get('services.confiant.propertyId');\n\t\tconst mapping = context.get('services.confiant.mapping');\n\t\tconst activation = context.get('services.confiant.activation');\n\n\t\tif (!context.get('services.confiant.enabled') || !propertyId || !mapping || !activation) {\n\t\t\tutils.logger(logGroup, 'disabled');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tutils.logger(logGroup, 'loading');\n\n\t\t// eslint-disable-next-line  no-underscore-dangle\n\t\twindow._clrm = window._clrm || {};\n\t\t// eslint-disable-next-line  no-underscore-dangle\n\t\twindow._clrm.gpt = {\n\t\t\tpropertyId,\n\t\t\tconfiantCdn: scriptDomain,\n\t\t\tsandbox: 0,\n\t\t\tmapping,\n\t\t\tactivation,\n\t\t\tcallback: (...args) => {\n\t\t\t\tutils.logger(logGroup, args);\n\t\t\t},\n\t\t};\n\n\t\treturn loadScript().then(() => {\n\t\t\tutils.logger(logGroup, 'ready');\n\t\t});\n\t}\n}\n\nexport const confiant = new Confiant();\n","import { context, utils } from '@wikia/ad-engine';\n\nconst logGroup = 'geo-edge';\nconst scriptDomainId = 'd3b02estmut877';\n\n/**\n * Injects Geo Edge Site Side Protection script\n * @returns {Promise}\n */\nfunction loadScript() {\n\tconst geoEdgeLibraryUrl = `//${scriptDomainId}.cloudfront.net/grumi-ip.js`;\n\n\treturn utils.scriptLoader.loadScript(geoEdgeLibraryUrl, 'text/javascript', true, 'first');\n}\n\n/**\n * GeoEdge service handler\n */\nclass GeoEdge {\n\t/**\n\t * Requests service and injects script tag\n\t * @returns {Promise}\n\t */\n\tcall() {\n\t\tconst geoEdgeKey = context.get('services.geoEdge.id');\n\t\tconst geoEdgeConfig = context.get('services.geoEdge.config');\n\n\t\tif (!context.get('services.geoEdge.enabled') || !geoEdgeKey) {\n\t\t\tutils.logger(logGroup, 'disabled');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tutils.logger(logGroup, 'loading');\n\t\twindow.grumi = {\n\t\t\tcfg: geoEdgeConfig,\n\t\t\tkey: geoEdgeKey,\n\t\t};\n\n\t\treturn loadScript().then(() => {\n\t\t\tutils.logger(logGroup, 'ready');\n\t\t});\n\t}\n}\n\nexport const geoEdge = new GeoEdge();\n","import { context, utils } from '@wikia/ad-engine';\n\nconst logGroup = 'krux';\n\n/**\n * Injects Krux script\n * @returns {Promise}\n */\nfunction loadScript() {\n\tconst kruxId = context.get('services.krux.id');\n\tconst kruxLibraryUrl = `//cdn.krxd.net/controltag?confid=${kruxId}`;\n\n\treturn utils.scriptLoader.loadScript(kruxLibraryUrl, 'text/javascript', true, 'first', {\n\t\tid: 'krux-control-tag',\n\t});\n}\n\n/**\n * Gets Krux data from localStorage\n * @param {string} key\n * @returns {string}\n */\nfunction getKruxData(key) {\n\tif (window.localStorage) {\n\t\treturn window.localStorage[key];\n\t}\n\tif (window.navigator.cookieEnabled) {\n\t\tconst match = document.cookie.match(`${key}=([^;]*)`);\n\n\t\treturn (match && decodeURI(match[1])) || '';\n\t}\n\n\treturn '';\n}\n\nwindow.Krux =\n\twindow.Krux ||\n\tfunction (...args) {\n\t\twindow.Krux.q.push(args);\n\t};\nwindow.Krux.q = window.Krux.q || [];\n\n/**\n * Krux service handler\n */\nclass Krux {\n\t/**\n\t * Requests service, saves user id and segments in context and exports page level params\n\t * @returns {Promise}\n\t */\n\tcall() {\n\t\tif (!context.get('services.krux.enabled') || !context.get('options.trackingOptIn')) {\n\t\t\tutils.logger(logGroup, 'disabled');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tutils.logger(logGroup, 'loading');\n\n\t\treturn loadScript().then(() => {\n\t\t\tthis.exportPageParams();\n\t\t\tthis.importUserData();\n\t\t});\n\t}\n\n\t/**\n\t * Export page level params to Krux\n\t * @returns {void}\n\t */\n\texportPageParams() {\n\t\tObject.keys(context.get('targeting')).forEach((key) => {\n\t\t\tconst value = context.get(`targeting.${key}`);\n\n\t\t\tif (value) {\n\t\t\t\twindow[`kruxDartParam_${key}`] = value;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Imports Krux data from localStorage\n\t * @returns {void}\n\t */\n\timportUserData() {\n\t\tconst user = getKruxData('kxuser');\n\t\tconst segments = getKruxData('kxsegs');\n\n\t\tcontext.set('targeting.kuid', user || null);\n\t\tcontext.set('targeting.ksg', segments ? segments.split(',') : []);\n\t\tutils.logger(logGroup, 'data set', user, segments);\n\t}\n\n\t/**\n\t * Returns Krux user ID\n\t * @returns {string}\n\t */\n\tgetUserId() {\n\t\treturn context.get('targeting.kuid') || null;\n\t}\n\n\t/**\n\t * Returns Krux segments\n\t * @returns {string[]}\n\t */\n\tgetSegments() {\n\t\treturn context.get('targeting.ksg') || [];\n\t}\n}\n\nexport const krux = new Krux();\n","import { context, events, utils } from '@wikia/ad-engine';\n\nconst logGroup = 'moat-yi';\n\nevents.registerEvent('MOAT_YI_READY');\n\n/**\n * Injects MOAT YI script\n * @returns {Promise}\n */\nfunction loadScript() {\n\tconst partnerCode = context.get('services.moatYi.partnerCode');\n\tconst url = `//z.moatads.com/${partnerCode}/yi.js`;\n\n\treturn utils.scriptLoader.loadScript(url, 'text/javascript', true, 'first');\n}\n\n/**\n * MOAT YI service handler\n */\nclass MoatYi {\n\t/**\n\t * Requests MOAT YI service and saves page level data in targeting\n\t * @returns {Promise}\n\t */\n\tcall() {\n\t\tif (!context.get('services.moatYi.enabled') || !context.get('services.moatYi.partnerCode')) {\n\t\t\tutils.logger(logGroup, 'disabled');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tlet moatYeildReadyResolve;\n\t\tconst promise = new Promise((resolve) => {\n\t\t\tmoatYeildReadyResolve = resolve;\n\t\t});\n\n\t\tutils.logger(logGroup, 'loading');\n\t\twindow.moatYieldReady = () => {\n\t\t\tthis.importPageParams();\n\t\t\tmoatYeildReadyResolve();\n\t\t};\n\t\tcontext.set('targeting.m_data', 'waiting');\n\n\t\tloadScript().then(() => {\n\t\t\tutils.logger(logGroup, 'ready');\n\t\t});\n\n\t\treturn promise;\n\t}\n\n\t/**\n\t * Adds page params to targeting\n\t * @returns {void}\n\t */\n\timportPageParams() {\n\t\tif (\n\t\t\twindow.moatPrebidApi &&\n\t\t\ttypeof window.moatPrebidApi.getMoatTargetingForPage === 'function'\n\t\t) {\n\t\t\tconst pageParams = window.moatPrebidApi.getMoatTargetingForPage() || {};\n\n\t\t\tcontext.set('targeting.m_data', pageParams.m_data);\n\t\t\tevents.emit(events.MOAT_YI_READY, `m_data=${pageParams.m_data}`);\n\t\t\tutils.logger(logGroup, 'moatYieldReady', pageParams);\n\t\t}\n\t}\n}\n\nexport const moatYi = new MoatYi();\n","// NIELSEN CODE START\n// eslint-disable-next-line\nexport function initNielsenStaticQueue(){!function(t,n){t[n]=t[n]||{nlsQ:function(e,o,c,r,s,i){return s=t.document,r=s.createElement(\"script\"),r.async=1,r.src=(\"http:\"===t.location.protocol?\"http:\":\"https:\")+\"//cdn-gl.imrworldwide.com/conf/\"+e+\".js#name=\"+o+\"&ns=\"+n,i=s.getElementsByTagName(\"script\")[0],i.parentNode.insertBefore(r,i),t[n][o]=t[n][o]||{g:c||{},ggPM:function(e,c,r,s,i){(t[n][o].q=t[n][o].q||[]).push([e,c,r,s,i])}},t[n][o]}}}(window,\"NOLBUNDLE\");}\n// NIELSEN CODE END\n","/* global NOLBUNDLE */\nimport { context, utils } from '@wikia/ad-engine';\nimport { initNielsenStaticQueue } from './static-queue-script';\n\nconst logGroup = 'nielsen-dcr';\nconst nlsnConfig = {};\n\n/**\n * Creates Nielsen Static Queue Snippet\n */\nfunction createInstance(nielsenKey) {\n\tutils.logger(logGroup, 'loading');\n\n\tinitNielsenStaticQueue();\n\n\treturn NOLBUNDLE.nlsQ(nielsenKey, 'nlsnInstance', nlsnConfig);\n}\n\n/**\n * Nielsen service handler\n */\nclass Nielsen {\n\t/**\n\t * Class constructor\n\t */\n\tconstructor() {\n\t\tthis.nlsnInstance = null;\n\n\t\tif (utils.queryString.get('nielsen-dcr-debug') === '1') {\n\t\t\tnlsnConfig.nol_sdkDebug = 'debug';\n\t\t}\n\t}\n\n\t/**\n\t * Create Nielsen Static Queue and make a call\n\t * @param {Object} nielsenMetadata\n\t * @returns {Object}\n\t */\n\tcall(nielsenMetadata) {\n\t\tconst nielsenKey = context.get('services.nielsen.appId');\n\n\t\tif (!context.get('services.nielsen.enabled') || !nielsenKey) {\n\t\t\tutils.logger(logGroup, 'disabled');\n\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this.nlsnInstance) {\n\t\t\tthis.nlsnInstance = createInstance(nielsenKey);\n\t\t}\n\n\t\tutils.logger(logGroup, 'ready');\n\n\t\tthis.nlsnInstance.ggPM('staticstart', nielsenMetadata);\n\n\t\tutils.logger(logGroup, 'called', nielsenMetadata);\n\n\t\treturn this.nlsnInstance;\n\t}\n}\n\nexport const nielsen = new Nielsen();\n","export * from './bill-the-lizard';\nexport * from './confiant';\nexport * from './geo-edge';\nexport * from './krux';\nexport * from './moat-yi';\nexport * from './nielsen';\n"],"sourceRoot":""}