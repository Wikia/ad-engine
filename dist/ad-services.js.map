{"version":3,"sources":["webpack://adEngine/webpack/bootstrap","webpack://adEngine/external \"@wikia/ad-engine\"","webpack://adEngine/external \"babel-runtime/core-js/object/keys\"","webpack://adEngine/external \"babel-runtime/helpers/createClass\"","webpack://adEngine/external \"babel-runtime/helpers/classCallCheck\"","webpack://adEngine/external \"babel-runtime/core-js/object/assign\"","webpack://adEngine/external \"babel-runtime/core-js/promise\"","webpack://adEngine/./src/ad-services/bill-the-lizard/executor.js","webpack://adEngine/./src/ad-services/bill-the-lizard/projects-handler.js","webpack://adEngine/./src/ad-services/bill-the-lizard/index.js"],"names":["logGroup","methods","name","callback","utils","logger","methodName","model","prediction","Error","models","response","forEach","modelName","result","executableModel","find","executable","definedMethods","execute","projects","projectName","context","get","projectParameters","enabledProjectNames","filter","isEnabled","parameters","isNextModelExecutable","isProperGeo","countries","is_lazy_called","push","buildUrl","host","endpoint","queryParameters","params","key","encodeURI","join","httpRequest","timeout","request","window","XMLHttpRequest","url","open","responseType","resolve","reject","addEventListener","abort","onload","status","message","send","getQueryParameters","now","Date","day","getDay","map","h","getHours","dow","overridePredictions","newValue","queryString","parseInt","executor","projectsHandler","predictions","lazyCallProject","getEnabledModels","length","then","parsePredictions","executeMethods","targeting","definition","version","suffix","indexOf","dfp_targeting","set","billTheLizard"],"mappings":"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","file":"ad-services.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = require(\"@wikia/ad-engine\");","module.exports = require(\"babel-runtime/core-js/object/keys\");","module.exports = require(\"babel-runtime/helpers/createClass\");","module.exports = require(\"babel-runtime/helpers/classCallCheck\");","module.exports = require(\"babel-runtime/core-js/object/assign\");","module.exports = require(\"babel-runtime/core-js/promise\");","import { utils } from '@wikia/ad-engine';\n\nconst logGroup = 'executor';\n\n/**\n * Bill the Lizard methods executor\n */\nexport class Executor {\n\tconstructor() {\n\t\tthis.methods = {};\n\t}\n\n\t/**\n\t * Registeres new method\n\t * @param {string} name\n\t * @param {function} callback\n\t */\n\tregister(name, callback) {\n\t\tutils.logger(logGroup, `method ${name} registered`);\n\t\tthis.methods[name] = callback;\n\t}\n\n\t/**\n\t * Executes method by name\n\t * @param {string} methodName\n\t * @param {ModelDefinition} model\n\t * @param {number|undefined} prediction\n\t */\n\texecute(methodName, model, prediction) {\n\t\tconst callback = this.methods[methodName];\n\n\t\tif (typeof callback !== 'function') {\n\t\t\tthrow Error(`${methodName} is not executable`);\n\t\t}\n\n\t\tutils.logger(logGroup, `executing ${methodName} method`, model.name, prediction);\n\t\tcallback(model, prediction);\n\t}\n\n\t/**\n\t * Executes all methods defined in given model based on service response\n\t * @param {ModelDefinition[]} models\n\t * @param {Object} response\n\t */\n\texecuteMethods(models, response) {\n\t\tObject.keys(response).forEach((modelName) => {\n\t\t\tconst { result } = response[modelName];\n\n\t\t\tconst executableModel = models.find(model => model.name === modelName && model.executable);\n\t\t\tif (!executableModel) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst definedMethods = executableModel[`on_${result}`];\n\t\t\tif (!definedMethods) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdefinedMethods.forEach(methodName => this.execute(methodName, executableModel, result));\n\t\t});\n\t}\n}\n","import { context, utils } from '@wikia/ad-engine';\n\nconst logGroup = 'project-handler';\n\n/**\n * Bill the Lizard projects handler\n */\nexport class ProjectsHandler {\n\tconstructor() {\n\t\tthis.projects = {};\n\t}\n\n\t/**\n\t * Enables project by name\n\t * @param {string} name\n\t */\n\tenable(name) {\n\t\tutils.logger(logGroup, `project ${name} enabled`);\n\t\tthis.projects[name] = true;\n\t}\n\n\t/**\n\t * Checks whether project is enabled\n\t * @param {string} name\n\t * @returns {boolean}\n\t */\n\tisEnabled(name) {\n\t\treturn !!this.projects[name];\n\t}\n\n\t/**\n\t * Returns all geo-enabled models' definitions based on enabled projects\n\t * @returns {{models: ModelDefinition[], parameters: Object}}\n\t */\n\tgetEnabledModels(projectName = null) {\n\t\tconst projects = context.get('services.billTheLizard.projects');\n\t\tconst projectParameters = context.get('services.billTheLizard.parameters');\n\t\tconst enabledProjectNames = Object.keys(projects)\n\t\t\t.filter(\n\t\t\t\tname => (this.isEnabled(name) && (!projectName || name === projectName))\n\t\t\t);\n\t\tconst models = [];\n\t\tconst parameters = {};\n\n\t\tenabledProjectNames.forEach((name) => {\n\t\t\t// Only first enabled model in project is executable\n\t\t\tlet isNextModelExecutable = true;\n\n\t\t\tprojects[name].forEach((model) => {\n\t\t\t\tif (\n\t\t\t\t\tutils.isProperGeo(model.countries, model.name) && ((!model.is_lazy_called || projectName))\n\t\t\t\t) {\n\t\t\t\t\tmodel.executable = isNextModelExecutable;\n\t\t\t\t\tisNextModelExecutable = false;\n\t\t\t\t\tmodels.push(model);\n\t\t\t\t\tObject.assign(parameters, projectParameters[name]);\n\t\t\t\t} else {\n\t\t\t\t\tmodel.executable = false;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn {\n\t\t\tmodels,\n\t\t\tparameters\n\t\t};\n\t}\n}\n","import { context, utils } from '@wikia/ad-engine';\nimport { Executor } from './executor';\nimport { ProjectsHandler } from './projects-handler';\n\n/**\n * @typedef {Object} ModelDefinition\n * @property {boolean|undefined} executable\n * @property {string[]} countries\n * @property {string} name\n * @property {function} on_*\n */\n\nconst logGroup = 'bill-the-lizard';\n\n/**\n * Builds endpoint url\n * @param {string} host\n * @param {string} endpoint\n * @param {Object} queryParameters (key-value pairs for query parameters)\n * @returns {string}\n */\nfunction buildUrl(host, endpoint, queryParameters = {}) {\n\tconst params = [];\n\n\tObject.keys(queryParameters).forEach((key) => {\n\t\tparams.push(`${key}=${queryParameters[key]}`);\n\t});\n\n\treturn `${host}/${endpoint}?${encodeURI(params.join('&'))}`;\n}\n\n/**\n * Requests service\n * @param {string} host\n * @param {string} endpoint\n * @param {Object} queryParameters (key-value pairs for query parameters)\n * @param {number} timeout\n * @returns {Promise}\n */\nfunction httpRequest(host, endpoint, queryParameters = {}, timeout = 0) {\n\tconst request = new window.XMLHttpRequest();\n\tconst url = buildUrl(host, endpoint, queryParameters);\n\n\trequest.open('GET', url, true);\n\trequest.responseType = 'json';\n\trequest.timeout = timeout;\n\n\tutils.logger(logGroup, 'timeout configured to', request.timeout);\n\n\treturn new Promise((resolve, reject) => {\n\t\trequest.addEventListener('timeout', () => {\n\t\t\trequest.abort();\n\t\t\treject(new Error('Timeout reached'));\n\t\t\tutils.logger(logGroup, 'timed out');\n\t\t});\n\t\trequest.onload = function () {\n\t\t\tif (this.status === 200) {\n\t\t\t\tutils.logger(logGroup, 'has response');\n\t\t\t\tresolve(this.response);\n\t\t\t} else {\n\t\t\t\tutils.logger(logGroup, 'error occurred');\n\t\t\t\treject(new Error(this.response ? this.response.message : 'Error'));\n\t\t\t}\n\t\t};\n\t\trequest.send();\n\t});\n}\n\n/**\n * Builds key-value pairs for query parameters\n * @param {ModelDefinition[]} models\n * @param {Object} parameters (key-value pairs)\n * @returns {Object}\n */\nfunction getQueryParameters(models, parameters) {\n\tconst now = new Date();\n\tconst day = now.getDay() - 1;\n\n\treturn Object.assign({}, {\n\t\tmodels: models.map(model => model.name),\n\t\th: now.getHours(),\n\t\tdow: day === -1 ? 6 : day\n\t}, parameters);\n}\n\n/**\n * Overrides predictions based on response\n * @param {Object} response\n * @returns {Object}\n */\nfunction overridePredictions(response) {\n\tObject.keys(response).forEach((name) => {\n\t\tconst newValue = utils.queryString.get(`bill.${name}`);\n\n\t\tif (newValue) {\n\t\t\tresponse[name].result = parseInt(newValue, 10);\n\t\t}\n\t});\n\n\treturn response;\n}\n\n/**\n * Bill the Lizard service handler\n */\nclass BillTheLizard {\n\tconstructor() {\n\t\tthis.executor = new Executor();\n\t\tthis.projectsHandler = new ProjectsHandler();\n\t\tthis.predictions = {};\n\t}\n\n\t/**\n\t * Requests service, executes defined methods and parses response\n\t * @returns {Promise}\n\t */\n\tcall(lazyCallProject = null) {\n\t\tif (!context.get('services.billTheLizard.enabled')) {\n\t\t\tutils.logger(logGroup, 'disabled');\n\t\t\treturn new Promise((resolve, reject) => reject(new Error('Disabled')));\n\t\t}\n\n\t\tconst host = context.get('services.billTheLizard.host');\n\t\tconst endpoint = context.get('services.billTheLizard.endpoint');\n\t\tconst timeout = context.get('services.billTheLizard.timeout');\n\t\tconst { models, parameters } = this.projectsHandler.getEnabledModels(lazyCallProject);\n\n\t\tif (!models || models.length < 1) {\n\t\t\tutils.logger(logGroup, 'no models to predict');\n\t\t\treturn new Promise((resolve, reject) => reject(new Error('Missing models')));\n\t\t}\n\n\t\tconst queryParameters = getQueryParameters(models, parameters);\n\t\tutils.logger(logGroup, 'calling service', host, endpoint, queryParameters);\n\n\t\treturn httpRequest(host, endpoint, queryParameters, timeout)\n\t\t\t.then(response => overridePredictions(response))\n\t\t\t.then((response) => {\n\t\t\t\tconst predictions = this.parsePredictions(models, response);\n\n\t\t\t\tthis.executor.executeMethods(models, response);\n\n\t\t\t\treturn predictions;\n\t\t\t});\n\t}\n\n\t/**\n\t * Parses predictions based on response\n\t * @param {ModelDefinition[]} models\n\t * @param {Object} response\n\t * @returns {Object}\n\t */\n\tparsePredictions(models, response) {\n\t\tconst targeting = [];\n\t\tthis.predictions = {};\n\n\t\tObject.keys(response).forEach((key) => {\n\t\t\tconst model = models.find(definition => definition.name === key);\n\t\t\tconst { result, version } = response[key];\n\t\t\tconst suffix = key.indexOf(version) > 0 ? '' : `:${version}`;\n\n\t\t\tif (typeof result !== 'undefined') {\n\t\t\t\tthis.predictions[`${key}${suffix}`] = result;\n\n\t\t\t\tif (model && model.dfp_targeting) {\n\t\t\t\t\ttargeting.push(`${key}${suffix}_${result}`);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (targeting.length > 0) {\n\t\t\tcontext.set('targeting.btl', targeting);\n\t\t}\n\n\t\tutils.logger(logGroup, 'predictions', this.predictions);\n\n\t\treturn this.predictions;\n\t}\n\n\t/**\n\t * Returns prediction for given model name\n\t * @param {string} modelName\n\t * @returns {number|undefined}\n\t */\n\tgetPrediction(modelName) {\n\t\treturn this.predictions[modelName];\n\t}\n\n\t/**\n\t * Returns all (parsed) predictions\n\t * @returns {Object}\n\t */\n\tgetPredictions() {\n\t\treturn this.predictions;\n\t}\n\n\t/**\n\t * Serializes all predictions\n\t * @returns {string}\n\t */\n\tserialize() {\n\t\treturn Object.keys(this.predictions).map(key => `${key}=${this.predictions[key]}`).join(';');\n\t}\n}\n\nexport const billTheLizard = new BillTheLizard();\n"],"sourceRoot":""}