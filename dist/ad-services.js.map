{"version":3,"sources":["webpack://adEngine/webpack/bootstrap","webpack://adEngine/external \"@wikia/ad-engine\"","webpack://adEngine/external \"@babel/runtime/helpers/createClass\"","webpack://adEngine/external \"@babel/runtime/helpers/classCallCheck\"","webpack://adEngine/external \"@babel/runtime/helpers/defineProperty\"","webpack://adEngine/external \"@babel/runtime/helpers/toConsumableArray\"","webpack://adEngine/external \"@babel/runtime/helpers/slicedToArray\"","webpack://adEngine/./src/ad-services/bill-the-lizard/executor.ts","webpack://adEngine/./src/ad-services/bill-the-lizard/projects-handler.ts","webpack://adEngine/./src/ad-services/bill-the-lizard/index.ts","webpack://adEngine/./src/ad-services/confiant/index.ts","webpack://adEngine/./src/ad-services/geo-edge/index.ts","webpack://adEngine/./src/ad-services/krux/index.ts","webpack://adEngine/./src/ad-services/moat-yi/index.ts","webpack://adEngine/./src/ad-services/nielsen/static-queue-script.ts","webpack://adEngine/./src/ad-services/nielsen/index.ts","webpack://adEngine/./src/ad-services/index.ts"],"names":["logGroup","Executor","methods","name","callback","utils","logger","methodName","model","prediction","Error","models","response","Object","keys","forEach","modelName","result","executableModel","find","executable","definedMethods","execute","ProjectsHandler","projects","projectNames","context","get","projectParameters","enabledProjectNames","filter","isEnabled","includes","parameters","isNextModelExecutable","isProperGeo","countries","push","assign","openRequests","events","registerEvent","buildQueryUrl","queryParameters","params","key","encodeURI","join","buildUrl","host","endpoint","query","httpRequest","timeout","callId","request","window","XMLHttpRequest","url","emit","BILL_THE_LIZARD_REQUEST","open","responseType","Promise","resolve","reject","addEventListener","onreadystatechange","readyState","status","send","getQueryParameters","now","Date","day","getDay","map","h","getHours","dow","overridePredictions","newValue","queryString","parseInt","BillTheLizard","executor","projectsHandler","targetedModelNames","Set","callCounter","predictions","statuses","req","abort","remove","getEnabledModelsWithParams","length","NOT_USED","dfp_targeting","add","TOO_LATE","catch","error","message","TIMEOUT","FAILURE","then","ON_TIME","modelToResultMap","getModelToResultMap","buildPredictions","setTargeting","BILL_THE_LIZARD_RESPONSE","serialize","executeMethods","undefined","targeting","getTargeting","serializedTargeting","entries","set","latestResults","pred","has","getPredictions","separator","split","startId","callIdBuilder","backCounter","prevStatus","getResponseStatus","getPrediction","billTheLizard","scriptDomain","loadScript","confiantLibraryUrl","scriptLoader","Confiant","propertyId","mapping","activation","_clrm","gpt","confiantCdn","sandbox","args","confiant","scriptDomainId","geoEdgeLibraryUrl","GeoEdge","geoEdgeKey","geoEdgeConfig","grumi","cfg","geoEdge","kruxId","kruxLibraryUrl","id","getKruxData","localStorage","navigator","cookieEnabled","match","document","cookie","decodeURI","Krux","q","exportPageParams","importUserData","value","user","segments","krux","partnerCode","MoatYi","moatYeildReadyResolve","promise","moatYieldReady","importPageParams","moatPrebidApi","getMoatTargetingForPage","pageParams","m_data","MOAT_YI_READY","moatYi","initNielsenStaticQueue","t","n","nlsQ","e","o","c","r","s","i","createElement","async","src","location","protocol","getElementsByTagName","parentNode","insertBefore","g","ggPM","nlsnConfig","createInstance","nielsenKey","NOLBUNDLE","Nielsen","nlsnInstance","nol_sdkDebug","nielsenMetadata","nielsen"],"mappings":"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","file":"ad-services.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = require(\"@wikia/ad-engine\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","import { utils } from '@wikia/ad-engine';\n\nconst logGroup = 'executor';\n\n/**\n * Bill the Lizard methods executor\n */\nexport class Executor {\n\tconstructor() {\n\t\tthis.methods = {};\n\t}\n\n\t/**\n\t * Registeres new method\n\t * @param {string} name\n\t * @param {function} callback\n\t */\n\tregister(name, callback) {\n\t\tutils.logger(logGroup, `method ${name} registered`);\n\t\tthis.methods[name] = callback;\n\t}\n\n\t/**\n\t * Executes method by name\n\t * @param {string} methodName\n\t * @param {ModelDefinition} model\n\t * @param {number|undefined} prediction\n\t */\n\texecute(methodName, model, prediction) {\n\t\tconst callback = this.methods[methodName];\n\n\t\tif (typeof callback !== 'function') {\n\t\t\tthrow Error(`${methodName} is not executable`);\n\t\t}\n\n\t\tutils.logger(logGroup, `executing ${methodName} method`, model.name, prediction);\n\t\tcallback(model, prediction);\n\t}\n\n\t/**\n\t * Executes all methods defined in given model based on service response\n\t * @param {ModelDefinition[]} models\n\t * @param {Object} response\n\t */\n\texecuteMethods(models, response) {\n\t\tObject.keys(response).forEach((modelName) => {\n\t\t\tconst { result } = response[modelName];\n\n\t\t\tconst executableModel = models.find((model) => model.name === modelName && model.executable);\n\n\t\t\tif (!executableModel) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst definedMethods = executableModel[`on_${result}`];\n\n\t\t\tif (!definedMethods) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdefinedMethods.forEach((methodName) => this.execute(methodName, executableModel, result));\n\t\t});\n\t}\n}\n","import { context, utils } from '@wikia/ad-engine';\n\nconst logGroup = 'project-handler';\n\n/**\n * Bill the Lizard projects handler\n */\nexport class ProjectsHandler {\n\tconstructor() {\n\t\tthis.projects = {};\n\t}\n\n\t/**\n\t * Enables project by name\n\t * @param {string} name\n\t */\n\tenable(name) {\n\t\tutils.logger(logGroup, `project ${name} enabled`);\n\t\tthis.projects[name] = true;\n\t}\n\n\t/**\n\t * Checks whether project is enabled\n\t * @param {string} name\n\t * @returns {boolean}\n\t */\n\tisEnabled(name) {\n\t\treturn !!this.projects[name];\n\t}\n\n\t/**\n\t * Returns all geo-enabled models' definitions based on enabled projects\n\t * @param {string[]} projectNames\n\t * @returns {{models: ModelDefinition[], parameters: Object}}\n\t */\n\tgetEnabledModelsWithParams(projectNames) {\n\t\tconst projects = context.get('services.billTheLizard.projects');\n\t\tconst projectParameters = context.get('services.billTheLizard.parameters');\n\t\tconst enabledProjectNames = Object.keys(projects).filter(\n\t\t\t(name) => this.isEnabled(name) && projectNames.includes(name),\n\t\t);\n\t\tconst models = [];\n\t\tconst parameters = {};\n\n\t\tenabledProjectNames.forEach((name) => {\n\t\t\t// Only first enabled model in project is executable\n\t\t\tlet isNextModelExecutable = true;\n\n\t\t\tprojects[name].forEach((model) => {\n\t\t\t\tif (utils.isProperGeo(model.countries, model.name)) {\n\t\t\t\t\tmodel.executable = isNextModelExecutable;\n\t\t\t\t\tisNextModelExecutable = false;\n\t\t\t\t\tmodels.push(model);\n\t\t\t\t\tObject.assign(parameters, projectParameters[name]);\n\t\t\t\t} else {\n\t\t\t\t\tmodel.executable = false;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn {\n\t\t\tmodels,\n\t\t\tparameters,\n\t\t};\n\t}\n}\n","import { context, events, utils } from '@wikia/ad-engine';\nimport { Executor } from './executor';\nimport { ProjectsHandler } from './projects-handler';\n\n/**\n * @typedef {Object} ModelDefinition\n * @property {boolean|undefined} executable\n * @property {string[]} countries\n * @property {string} name\n * @property {function} on_*\n */\n\n/**\n * @typedef {Object} PredictionDefinition\n * @property {string} modelName\n * @property {result} number\n * @property {(number|string)} callId\n */\n\nconst logGroup = 'bill-the-lizard';\nlet openRequests = [];\n\nevents.registerEvent('BILL_THE_LIZARD_REQUEST');\nevents.registerEvent('BILL_THE_LIZARD_RESPONSE');\n\n/**\n * Builds query parameters for url\n * @param {Object} queryParameters (key-value pairs for query parameters)\n * @returns {string}\n */\nfunction buildQueryUrl(queryParameters) {\n\tconst params = [];\n\n\tObject.keys(queryParameters).forEach((key) => {\n\t\tparams.push(`${key}=${queryParameters[key]}`);\n\t});\n\n\treturn encodeURI(params.join('&'));\n}\n\n/**\n * Builds endpoint url\n * @param {string} host\n * @param {string} endpoint\n * @param {string} query\n * @returns {string}\n */\nfunction buildUrl(host, endpoint, query) {\n\treturn `${host}/${endpoint}?${query}`;\n}\n\n/**\n * Requests service\n * @param {string} host\n * @param {string} endpoint\n * @param {Object} queryParameters (key-value pairs for query parameters)\n * @param {number} timeout\n * @param {number|string} callId\n * @returns {Promise}\n */\nfunction httpRequest(host, endpoint, queryParameters = {}, timeout = 0, callId) {\n\tconst request = new window.XMLHttpRequest();\n\tconst query = buildQueryUrl(queryParameters);\n\tconst url = buildUrl(host, endpoint, query);\n\n\tevents.emit(events.BILL_THE_LIZARD_REQUEST, {\n\t\tquery,\n\t\tcallId,\n\t});\n\n\trequest.open('GET', url, true);\n\trequest.responseType = 'json';\n\trequest.timeout = timeout;\n\n\topenRequests.push(request);\n\n\tutils.logger(logGroup, 'timeout configured to', request.timeout);\n\n\treturn new Promise((resolve, reject) => {\n\t\trequest.addEventListener('timeout', () => {\n\t\t\treject(new Error('timeout'));\n\t\t\tutils.logger(logGroup, 'timed out');\n\t\t});\n\t\trequest.addEventListener('error', () => {\n\t\t\treject(new Error('error'));\n\t\t\tutils.logger(logGroup, 'errored');\n\t\t});\n\t\trequest.onreadystatechange = function () {\n\t\t\tif (this.readyState === 4 && this.status === 200) {\n\t\t\t\tutils.logger(logGroup, 'has response');\n\t\t\t\tresolve(this.response);\n\t\t\t}\n\t\t};\n\t\trequest.send();\n\t});\n}\n\n/**\n * Builds key-value pairs for query parameters\n * @param {ModelDefinition[]} models\n * @param {Object} parameters (key-value pairs)\n * @returns {Object}\n */\nfunction getQueryParameters(models, parameters) {\n\tconst now = new Date();\n\tconst day = now.getDay() - 1;\n\n\treturn Object.assign(\n\t\t{},\n\t\t{\n\t\t\tmodels: models.map((model) => model.name),\n\t\t\th: now.getHours(),\n\t\t\tdow: day === -1 ? 6 : day,\n\t\t},\n\t\tparameters,\n\t);\n}\n\n/**\n * Overrides predictions based on response\n * @param {Object} response\n * @returns {Object}\n */\nfunction overridePredictions(response) {\n\tObject.keys(response).forEach((name) => {\n\t\tconst newValue = utils.queryString.get(`bill.${name}`);\n\n\t\tif (newValue) {\n\t\t\tresponse[name].result = parseInt(newValue, 10);\n\t\t}\n\t});\n\n\treturn response;\n}\n\n/**\n * Bill the Lizard service handler\n */\nexport class BillTheLizard {\n\tstatic FAILURE = 'failure';\n\tstatic NOT_USED = 'not_used';\n\tstatic ON_TIME = 'on_time';\n\tstatic TIMEOUT = 'timeout';\n\tstatic TOO_LATE = 'too_late';\n\tstatic REUSED = 'reused';\n\n\tconstructor() {\n\t\tthis.executor = new Executor();\n\t\tthis.projectsHandler = new ProjectsHandler();\n\t\tthis.targetedModelNames = new Set();\n\n\t\tthis.callCounter = 0;\n\t\tthis.predictions = [];\n\t\tthis.statuses = {};\n\t}\n\n\treset() {\n\t\tthis.callCounter = 0;\n\t\tthis.predictions = [];\n\t\tthis.statuses = {};\n\n\t\topenRequests.forEach((req) => req.abort());\n\t\topenRequests = [];\n\t\tcontext.remove('targeting.btl');\n\t}\n\n\t/**\n\t * Requests service, executes defined methods and parses response\n\t *\n\t * Supply callKey if you need to access status for this specific request.\n\t * DO NOT use an integer as callKey as it's the default value.\n\t * Good key example: \"incontent_boxad1\".\n\t *\n\t * @param {string[]} projectNames\n\t * @param {string} callId key for this call\n\t * @returns {Promise}\n\t */\n\tcall(projectNames, callId) {\n\t\tif (!context.get('services.billTheLizard.enabled')) {\n\t\t\tutils.logger(logGroup, 'disabled');\n\n\t\t\treturn new Promise((resolve, reject) => reject(new Error('Disabled')));\n\t\t}\n\n\t\tif (!callId) {\n\t\t\tthis.callCounter += 1;\n\t\t\tcallId = this.callCounter;\n\t\t}\n\n\t\tconst host = context.get('services.billTheLizard.host');\n\t\tconst endpoint = context.get('services.billTheLizard.endpoint');\n\t\tconst timeout = context.get('services.billTheLizard.timeout');\n\t\tconst { models, parameters } = this.projectsHandler.getEnabledModelsWithParams(projectNames);\n\n\t\tif (!models || models.length < 1) {\n\t\t\tutils.logger(logGroup, 'no models to predict');\n\t\t\tthis.statuses[callId] = BillTheLizard.NOT_USED;\n\n\t\t\treturn Promise.resolve({});\n\t\t}\n\n\t\t// update names of GAM targeted models\n\t\tmodels\n\t\t\t.filter((model) => model.dfp_targeting)\n\t\t\t.forEach((model) => this.targetedModelNames.add(model.name));\n\n\t\tconst queryParameters = getQueryParameters(models, parameters);\n\n\t\tutils.logger(logGroup, 'calling service', host, endpoint, queryParameters, `callId: ${callId}`);\n\n\t\tthis.statuses[callId] = BillTheLizard.TOO_LATE;\n\n\t\treturn httpRequest(host, endpoint, queryParameters, timeout, callId)\n\t\t\t.catch((error) => {\n\t\t\t\tif (error.message === 'timeout') {\n\t\t\t\t\tthis.statuses[callId] = BillTheLizard.TIMEOUT;\n\t\t\t\t} else {\n\t\t\t\t\tthis.statuses[callId] = BillTheLizard.FAILURE;\n\t\t\t\t}\n\n\t\t\t\treturn Promise.reject(error);\n\t\t\t})\n\t\t\t.then((response) => overridePredictions(response))\n\t\t\t.then((response) => {\n\t\t\t\tutils.logger(logGroup, 'service response OK', `callId: ${callId}`);\n\n\t\t\t\tthis.statuses[callId] = BillTheLizard.ON_TIME;\n\n\t\t\t\tconst modelToResultMap = this.getModelToResultMap(response);\n\n\t\t\t\tutils.logger(logGroup, 'predictions', modelToResultMap, `callId: ${callId}`);\n\n\t\t\t\tconst predictions = this.buildPredictions(models, modelToResultMap, callId);\n\n\t\t\t\tthis.predictions.push(...predictions);\n\n\t\t\t\tthis.setTargeting();\n\n\t\t\t\tevents.emit(events.BILL_THE_LIZARD_RESPONSE, {\n\t\t\t\t\tcallId,\n\t\t\t\t\tresponse: this.serialize(callId),\n\t\t\t\t});\n\n\t\t\t\tthis.executor.executeMethods(models, response);\n\n\t\t\t\treturn modelToResultMap;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tutils.logger(logGroup, 'service response', error.message, `callId: ${callId}`);\n\n\t\t\t\treturn {};\n\t\t\t});\n\t}\n\n\t/**\n\t *\n\t * @param {ModelDefinition[]} models\n\t * @param {Object.<string, number>} modelToResultMap\n\t * @param {number|string} callId\n\t * @returns {PredictionDefinition[]}\n\t */\n\tbuildPredictions(models, modelToResultMap, callId) {\n\t\treturn models\n\t\t\t.map((model) => model.name)\n\t\t\t.filter((modelName) => modelToResultMap[modelName] !== undefined)\n\t\t\t.map((modelName) => ({ modelName, callId, result: modelToResultMap[modelName] }));\n\t}\n\n\t/**\n\t * Converts response to predictions\n\t * @param {Object} response\n\t * @returns {PredictionDefinition}\n\t */\n\tgetModelToResultMap(response) {\n\t\tconst modelToResultMap = {};\n\n\t\tObject.keys(response).forEach((modelName) => {\n\t\t\tconst { result } = response[modelName];\n\n\t\t\tif (typeof result !== 'undefined') {\n\t\t\t\tmodelToResultMap[modelName] = result;\n\t\t\t}\n\t\t});\n\n\t\treturn modelToResultMap;\n\t}\n\n\t/**\n\t * Sets DFP targeting in context.\n\t *\n\t * @returns string\n\t */\n\tsetTargeting() {\n\t\tconst targeting = this.getTargeting();\n\n\t\tif (Object.keys(targeting).length > 0) {\n\t\t\tconst serializedTargeting = Object.entries(targeting).map(\n\t\t\t\t([modelName, result]) => `${modelName}_${result}`,\n\t\t\t);\n\n\t\t\tcontext.set('targeting.btl', serializedTargeting);\n\n\t\t\treturn serializedTargeting;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t/**\n\t * Returns map of targeted models to their results.\n\t *\n\t * For each model, it takes the latest result.\n\t *\n\t * @returns {Object.<string, number>}\n\t */\n\tgetTargeting() {\n\t\tconst latestResults = {};\n\n\t\tthis.predictions\n\t\t\t.filter((pred) => this.targetedModelNames.has(pred.modelName))\n\t\t\t.forEach((pred) => {\n\t\t\t\tlatestResults[pred.modelName] = pred.result;\n\t\t\t});\n\n\t\treturn latestResults;\n\t}\n\n\t/**\n\t * Get prediction by modelName and callId.\n\t *\n\t * @param {string} modelName\n\t * @param {(number|string)} callId\n\t * @returns {PredictionDefinition}\n\t */\n\tgetPrediction(modelName, callId) {\n\t\treturn this.getPredictions(modelName).find((pred) => pred.callId === callId);\n\t}\n\n\t/**\n\t * Returns predictions optionally filtered by model name.\n\t *\n\t * If model name is given, it returns all predictions with models matching.\n\t * Model matches when raw name (without version) is matched.\n\t *\n\t * @param {string} [modelName]\n\t * @returns {PredictionDefinition[]}\n\t */\n\tgetPredictions(modelName) {\n\t\tconst separator = ':';\n\n\t\tif (modelName) {\n\t\t\treturn this.predictions.filter(\n\t\t\t\t(pred) => pred.modelName.split(separator)[0] === modelName.split(separator)[0],\n\t\t\t);\n\t\t}\n\n\t\treturn this.predictions;\n\t}\n\n\t/**\n\t * Returns response status (one of: failure, not_used, on_time, timeout, too_late or undefined);\n\t *\n\t * If callId is not supplied, the latest response without a specific key is returned.\n\t *\n\t * @param {number|string} [callId] value passed as key for call\n\t * @returns {string}\n\t */\n\tgetResponseStatus(callId) {\n\t\tcallId = callId || this.callCounter;\n\n\t\treturn this.statuses[callId];\n\t}\n\n\t/**\n\t * Serializes all predictions\n\t * @param {number|string} [callId]\n\t * @returns {string}\n\t */\n\tserialize(callId) {\n\t\tlet { predictions } = this;\n\n\t\tif (callId !== undefined) {\n\t\t\tpredictions = predictions.filter((pred) => pred.callId === callId);\n\t\t}\n\n\t\treturn predictions.map((pred) => `${pred.modelName}|${pred.callId}=${pred.result}`).join(',');\n\t}\n\n\t/**\n\t * Get prediction of previous calls.\n\t *\n\t * Uses a supplied callIdBuilder to construct callId\n\t * by iterating down from startId to 2.\n\t *\n\t * @param {number} startId\n\t * @param {function} callIdBuilder\n\t * @param {string} modelName\n\t * @returns {number | undefined}\n\t */\n\tgetPreviousPrediction(startId, callIdBuilder, modelName) {\n\t\tif (startId <= 1) {\n\t\t\treturn undefined;\n\t\t}\n\t\tfor (let backCounter = startId - 1; backCounter >= 1; backCounter--) {\n\t\t\tconst callId = callIdBuilder(backCounter);\n\t\t\tconst prevStatus = this.getResponseStatus(callId);\n\n\t\t\tif (prevStatus === BillTheLizard.ON_TIME || prevStatus === BillTheLizard.TOO_LATE) {\n\t\t\t\treturn this.getPrediction(modelName, callId);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nexport const billTheLizard = new BillTheLizard();\n","import { context, utils } from '@wikia/ad-engine';\n\nconst logGroup = 'confiant';\nconst scriptDomain = 'clarium.global.ssl.fastly.net';\n\n/**\n * Injects Confiant script\n * @returns {Promise}\n */\nfunction loadScript() {\n\tconst confiantLibraryUrl = `//${scriptDomain}/gpt/a/wrap.js`;\n\n\treturn utils.scriptLoader.loadScript(confiantLibraryUrl, 'text/javascript', true, 'first');\n}\n\n/**\n * Confiant service handler\n */\nclass Confiant {\n\t/**\n\t * Requests service and injects script tag\n\t * @returns {Promise}\n\t */\n\tcall() {\n\t\tconst propertyId = context.get('services.confiant.propertyId');\n\t\tconst mapping = context.get('services.confiant.mapping');\n\t\tconst activation = context.get('services.confiant.activation');\n\n\t\tif (!context.get('services.confiant.enabled') || !propertyId || !mapping || !activation) {\n\t\t\tutils.logger(logGroup, 'disabled');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tutils.logger(logGroup, 'loading');\n\n\t\t// eslint-disable-next-line  no-underscore-dangle\n\t\twindow._clrm = window._clrm || {};\n\t\t// eslint-disable-next-line  no-underscore-dangle\n\t\twindow._clrm.gpt = {\n\t\t\tpropertyId,\n\t\t\tconfiantCdn: scriptDomain,\n\t\t\tsandbox: 0,\n\t\t\tmapping,\n\t\t\tactivation,\n\t\t\tcallback: (...args) => {\n\t\t\t\tutils.logger(logGroup, args);\n\t\t\t},\n\t\t};\n\n\t\treturn loadScript().then(() => {\n\t\t\tutils.logger(logGroup, 'ready');\n\t\t});\n\t}\n}\n\nexport const confiant = new Confiant();\n","import { context, utils } from '@wikia/ad-engine';\n\nconst logGroup = 'geo-edge';\nconst scriptDomainId = 'd3b02estmut877';\n\n/**\n * Injects Geo Edge Site Side Protection script\n * @returns {Promise}\n */\nfunction loadScript() {\n\tconst geoEdgeLibraryUrl = `//${scriptDomainId}.cloudfront.net/grumi-ip.js`;\n\n\treturn utils.scriptLoader.loadScript(geoEdgeLibraryUrl, 'text/javascript', true, 'first');\n}\n\n/**\n * GeoEdge service handler\n */\nclass GeoEdge {\n\t/**\n\t * Requests service and injects script tag\n\t * @returns {Promise}\n\t */\n\tcall() {\n\t\tconst geoEdgeKey = context.get('services.geoEdge.id');\n\t\tconst geoEdgeConfig = context.get('services.geoEdge.config');\n\n\t\tif (!context.get('services.geoEdge.enabled') || !geoEdgeKey) {\n\t\t\tutils.logger(logGroup, 'disabled');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tutils.logger(logGroup, 'loading');\n\t\twindow.grumi = {\n\t\t\tcfg: geoEdgeConfig,\n\t\t\tkey: geoEdgeKey,\n\t\t};\n\n\t\treturn loadScript().then(() => {\n\t\t\tutils.logger(logGroup, 'ready');\n\t\t});\n\t}\n}\n\nexport const geoEdge = new GeoEdge();\n","import { context, utils } from '@wikia/ad-engine';\n\nconst logGroup = 'krux';\n\n/**\n * Injects Krux script\n * @returns {Promise}\n */\nfunction loadScript() {\n\tconst kruxId = context.get('services.krux.id');\n\tconst kruxLibraryUrl = `//cdn.krxd.net/controltag?confid=${kruxId}`;\n\n\treturn utils.scriptLoader.loadScript(kruxLibraryUrl, 'text/javascript', true, 'first', {\n\t\tid: 'krux-control-tag',\n\t});\n}\n\n/**\n * Gets Krux data from localStorage\n * @param {string} key\n * @returns {string}\n */\nfunction getKruxData(key) {\n\tif (window.localStorage) {\n\t\treturn window.localStorage[key];\n\t}\n\tif (window.navigator.cookieEnabled) {\n\t\tconst match = document.cookie.match(`${key}=([^;]*)`);\n\n\t\treturn (match && decodeURI(match[1])) || '';\n\t}\n\n\treturn '';\n}\n\nwindow.Krux =\n\twindow.Krux ||\n\tfunction (...args) {\n\t\twindow.Krux.q.push(args);\n\t};\nwindow.Krux.q = window.Krux.q || [];\n\n/**\n * Krux service handler\n */\nclass Krux {\n\t/**\n\t * Requests service, saves user id and segments in context and exports page level params\n\t * @returns {Promise}\n\t */\n\tcall() {\n\t\tif (!context.get('services.krux.enabled') || !context.get('options.trackingOptIn')) {\n\t\t\tutils.logger(logGroup, 'disabled');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tutils.logger(logGroup, 'loading');\n\n\t\treturn loadScript().then(() => {\n\t\t\tthis.exportPageParams();\n\t\t\tthis.importUserData();\n\t\t});\n\t}\n\n\t/**\n\t * Export page level params to Krux\n\t * @returns {void}\n\t */\n\texportPageParams() {\n\t\tObject.keys(context.get('targeting')).forEach((key) => {\n\t\t\tconst value = context.get(`targeting.${key}`);\n\n\t\t\tif (value) {\n\t\t\t\twindow[`kruxDartParam_${key}`] = value;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Imports Krux data from localStorage\n\t * @returns {void}\n\t */\n\timportUserData() {\n\t\tconst user = getKruxData('kxuser') || getKruxData('kxwikia_user');\n\t\tconst segments = getKruxData('kxsegs') || getKruxData('kxwikia_segs');\n\n\t\tcontext.set('targeting.kuid', user || null);\n\t\tcontext.set('targeting.ksg', segments ? segments.split(',') : []);\n\t\tutils.logger(logGroup, 'data set', user, segments);\n\t}\n\n\t/**\n\t * Returns Krux user ID\n\t * @returns {string}\n\t */\n\tgetUserId() {\n\t\treturn context.get('targeting.kuid') || null;\n\t}\n\n\t/**\n\t * Returns Krux segments\n\t * @returns {string[]}\n\t */\n\tgetSegments() {\n\t\treturn context.get('targeting.ksg') || [];\n\t}\n}\n\nexport const krux = new Krux();\n","import { context, events, utils } from '@wikia/ad-engine';\n\nconst logGroup = 'moat-yi';\n\nevents.registerEvent('MOAT_YI_READY');\n\n/**\n * Injects MOAT YI script\n * @returns {Promise}\n */\nfunction loadScript() {\n\tconst partnerCode = context.get('services.moatYi.partnerCode');\n\tconst url = `//z.moatads.com/${partnerCode}/yi.js`;\n\n\treturn utils.scriptLoader.loadScript(url, 'text/javascript', true, 'first');\n}\n\n/**\n * MOAT YI service handler\n */\nclass MoatYi {\n\t/**\n\t * Requests MOAT YI service and saves page level data in targeting\n\t * @returns {Promise}\n\t */\n\tcall() {\n\t\tif (!context.get('services.moatYi.enabled') || !context.get('services.moatYi.partnerCode')) {\n\t\t\tutils.logger(logGroup, 'disabled');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tlet moatYeildReadyResolve;\n\t\tconst promise = new Promise((resolve) => {\n\t\t\tmoatYeildReadyResolve = resolve;\n\t\t});\n\n\t\tutils.logger(logGroup, 'loading');\n\t\twindow.moatYieldReady = () => {\n\t\t\tthis.importPageParams();\n\t\t\tmoatYeildReadyResolve();\n\t\t};\n\t\tcontext.set('targeting.m_data', 'waiting');\n\n\t\tloadScript().then(() => {\n\t\t\tutils.logger(logGroup, 'ready');\n\t\t});\n\n\t\treturn promise;\n\t}\n\n\t/**\n\t * Adds page params to targeting\n\t * @returns {void}\n\t */\n\timportPageParams() {\n\t\tif (\n\t\t\twindow.moatPrebidApi &&\n\t\t\ttypeof window.moatPrebidApi.getMoatTargetingForPage === 'function'\n\t\t) {\n\t\t\tconst pageParams = window.moatPrebidApi.getMoatTargetingForPage() || {};\n\n\t\t\tcontext.set('targeting.m_data', pageParams.m_data);\n\t\t\tevents.emit(events.MOAT_YI_READY, `m_data=${pageParams.m_data}`);\n\t\t\tutils.logger(logGroup, 'moatYieldReady', pageParams);\n\t\t}\n\t}\n}\n\nexport const moatYi = new MoatYi();\n","// NIELSEN CODE START\n// eslint-disable-next-line\nexport function initNielsenStaticQueue(){!function(t,n){t[n]=t[n]||{nlsQ:function(e,o,c,r,s,i){return s=t.document,r=s.createElement(\"script\"),r.async=1,r.src=(\"http:\"===t.location.protocol?\"http:\":\"https:\")+\"//cdn-gl.imrworldwide.com/conf/\"+e+\".js#name=\"+o+\"&ns=\"+n,i=s.getElementsByTagName(\"script\")[0],i.parentNode.insertBefore(r,i),t[n][o]=t[n][o]||{g:c||{},ggPM:function(e,c,r,s,i){(t[n][o].q=t[n][o].q||[]).push([e,c,r,s,i])}},t[n][o]}}}(window,\"NOLBUNDLE\");}\n// NIELSEN CODE END\n","/* global NOLBUNDLE */\nimport { context, utils } from '@wikia/ad-engine';\nimport { initNielsenStaticQueue } from './static-queue-script';\n\nconst logGroup = 'nielsen-dcr';\nconst nlsnConfig = {};\n\n/**\n * Creates Nielsen Static Queue Snippet\n */\nfunction createInstance(nielsenKey) {\n\tutils.logger(logGroup, 'loading');\n\n\tinitNielsenStaticQueue();\n\n\treturn NOLBUNDLE.nlsQ(nielsenKey, 'nlsnInstance', nlsnConfig);\n}\n\n/**\n * Nielsen service handler\n */\nclass Nielsen {\n\t/**\n\t * Class constructor\n\t */\n\tconstructor() {\n\t\tthis.nlsnInstance = null;\n\n\t\tif (utils.queryString.get('nielsen-dcr-debug') === '1') {\n\t\t\tnlsnConfig.nol_sdkDebug = 'debug';\n\t\t}\n\t}\n\n\t/**\n\t * Create Nielsen Static Queue and make a call\n\t * @param {Object} nielsenMetadata\n\t * @returns {Object}\n\t */\n\tcall(nielsenMetadata) {\n\t\tconst nielsenKey = context.get('services.nielsen.appId');\n\n\t\tif (!context.get('services.nielsen.enabled') || !nielsenKey) {\n\t\t\tutils.logger(logGroup, 'disabled');\n\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this.nlsnInstance) {\n\t\t\tthis.nlsnInstance = createInstance(nielsenKey);\n\t\t}\n\n\t\tutils.logger(logGroup, 'ready');\n\n\t\tthis.nlsnInstance.ggPM('staticstart', nielsenMetadata);\n\n\t\tutils.logger(logGroup, 'called', nielsenMetadata);\n\n\t\treturn this.nlsnInstance;\n\t}\n}\n\nexport const nielsen = new Nielsen();\n","export * from './bill-the-lizard';\nexport * from './confiant';\nexport * from './geo-edge';\nexport * from './krux';\nexport * from './moat-yi';\nexport * from './nielsen';\n"],"sourceRoot":""}