{"version":3,"sources":["webpack://adEngine/webpack/bootstrap","webpack://adEngine/external \"@wikia/ad-engine\"","webpack://adEngine/external \"@babel/runtime-corejs2/helpers/createClass\"","webpack://adEngine/external \"@babel/runtime-corejs2/helpers/classCallCheck\"","webpack://adEngine/external \"@babel/runtime-corejs2/core-js/promise\"","webpack://adEngine/external \"@babel/runtime-corejs2/core-js/object/keys\"","webpack://adEngine/external \"@babel/runtime-corejs2/core-js/symbol\"","webpack://adEngine/external \"@babel/runtime-corejs2/core-js/object/assign\"","webpack://adEngine/external \"@babel/runtime-corejs2/core-js/parse-int\"","webpack://adEngine/external \"@babel/runtime-corejs2/core-js/set\"","webpack://adEngine/external \"@babel/runtime-corejs2/helpers/toConsumableArray\"","webpack://adEngine/external \"@babel/runtime-corejs2/core-js/object/entries\"","webpack://adEngine/external \"@babel/runtime-corejs2/helpers/slicedToArray\"","webpack://adEngine/./src/ad-services/bill-the-lizard/executor.ts","webpack://adEngine/./src/ad-services/bill-the-lizard/projects-handler.ts","webpack://adEngine/./src/ad-services/bill-the-lizard/index.ts","webpack://adEngine/./src/ad-services/confiant/index.ts","webpack://adEngine/./src/ad-services/geo-edge/index.ts","webpack://adEngine/./src/ad-services/krux/index.ts","webpack://adEngine/./src/ad-services/moat-yi/index.ts","webpack://adEngine/./src/ad-services/nielsen/static-queue-script.js","webpack://adEngine/./src/ad-services/nielsen/index.ts","webpack://adEngine/./src/ad-services/index.ts"],"names":["logGroup","Executor","methods","name","callback","utils","logger","methodName","model","prediction","Error","models","response","forEach","modelName","result","executableModel","find","executable","definedMethods","execute","ProjectsHandler","projects","projectNames","context","get","projectParameters","enabledProjectNames","filter","isEnabled","includes","parameters","isNextModelExecutable","isProperGeo","countries","push","openRequests","billThLizardEvents","BILL_THE_LIZARD_REQUEST","BILL_THE_LIZARD_RESPONSE","buildQueryUrl","queryParameters","params","key","encodeURI","join","buildUrl","host","endpoint","query","httpRequest","timeout","callId","request","window","XMLHttpRequest","url","eventService","emit","open","responseType","resolve","reject","addEventListener","onreadystatechange","readyState","status","send","getQueryParameters","now","Date","day","getDay","map","h","getHours","dow","overridePredictions","newValue","queryString","BillTheLizard","executor","projectsHandler","targetedModelNames","callCounter","predictions","statuses","req","abort","remove","getEnabledModelsWithParams","length","NOT_USED","dfp_targeting","add","TOO_LATE","catch","error","message","TIMEOUT","FAILURE","then","ON_TIME","modelToResultMap","getModelToResultMap","buildPredictions","setTargeting","serialize","executeMethods","undefined","targeting","getTargeting","serializedTargeting","set","latestResults","pred","has","getPredictions","separator","split","startId","callIdBuilder","backCounter","prevStatus","getResponseStatus","getPrediction","REUSED","billTheLizard","scriptDomain","loadScript","confiantLibraryUrl","scriptLoader","Confiant","propertyId","mapping","activation","_clrm","gpt","confiantCdn","sandbox","args","confiant","scriptDomainId","geoEdgeLibraryUrl","GeoEdge","geoEdgeKey","geoEdgeConfig","grumi","cfg","geoEdge","kruxId","kruxLibraryUrl","id","getKruxData","localStorage","navigator","cookieEnabled","match","document","cookie","decodeURI","Krux","q","exportPageParams","importUserData","value","user","segments","krux","moatYiEvents","MOAT_YI_READY","partnerCode","MoatYi","moatYeildReadyResolve","promise","moatYieldReady","importPageParams","moatPrebidApi","getMoatTargetingForPage","pageParams","m_data","moatYi","initNielsenStaticQueue","t","n","nlsQ","e","o","c","r","s","i","createElement","async","src","location","protocol","getElementsByTagName","parentNode","insertBefore","g","ggPM","nlsnConfig","createInstance","nielsenKey","NOLBUNDLE","Nielsen","nlsnInstance","nol_sdkDebug","nielsenMetadata","nielsen"],"mappings":"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","file":"ad-services.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","module.exports = require(\"@wikia/ad-engine\");","module.exports = require(\"@babel/runtime-corejs2/helpers/createClass\");","module.exports = require(\"@babel/runtime-corejs2/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime-corejs2/core-js/promise\");","module.exports = require(\"@babel/runtime-corejs2/core-js/object/keys\");","module.exports = require(\"@babel/runtime-corejs2/core-js/symbol\");","module.exports = require(\"@babel/runtime-corejs2/core-js/object/assign\");","module.exports = require(\"@babel/runtime-corejs2/core-js/parse-int\");","module.exports = require(\"@babel/runtime-corejs2/core-js/set\");","module.exports = require(\"@babel/runtime-corejs2/helpers/toConsumableArray\");","module.exports = require(\"@babel/runtime-corejs2/core-js/object/entries\");","module.exports = require(\"@babel/runtime-corejs2/helpers/slicedToArray\");","import { utils } from '@wikia/ad-engine';\n\nconst logGroup = 'executor';\n\n/**\n * Bill the Lizard methods executor\n */\nexport class Executor {\n\tmethods = {};\n\n\t/**\n\t * Registeres new method\n\t * @param {string} name\n\t * @param {function} callback\n\t */\n\tregister(name, callback) {\n\t\tutils.logger(logGroup, `method ${name} registered`);\n\t\tthis.methods[name] = callback;\n\t}\n\n\t/**\n\t * Executes method by name\n\t * @param {string} methodName\n\t * @param {ModelDefinition} model\n\t * @param {number|undefined} prediction\n\t */\n\texecute(methodName, model, prediction) {\n\t\tconst callback = this.methods[methodName];\n\n\t\tif (typeof callback !== 'function') {\n\t\t\tthrow Error(`${methodName} is not executable`);\n\t\t}\n\n\t\tutils.logger(logGroup, `executing ${methodName} method`, model.name, prediction);\n\t\tcallback(model, prediction);\n\t}\n\n\t/**\n\t * Executes all methods defined in given model based on service response\n\t * @param {ModelDefinition[]} models\n\t * @param {Object} response\n\t */\n\texecuteMethods(models, response) {\n\t\tObject.keys(response).forEach((modelName) => {\n\t\t\tconst { result } = response[modelName];\n\n\t\t\tconst executableModel = models.find((model) => model.name === modelName && model.executable);\n\n\t\t\tif (!executableModel) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst definedMethods = executableModel[`on_${result}`];\n\n\t\t\tif (!definedMethods) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdefinedMethods.forEach((methodName) => this.execute(methodName, executableModel, result));\n\t\t});\n\t}\n}\n","import { context, utils } from '@wikia/ad-engine';\n\nconst logGroup = 'project-handler';\n\n/**\n * Bill the Lizard projects handler\n */\nexport class ProjectsHandler {\n\tprojects = {};\n\n\t/**\n\t * Enables project by name\n\t * @param {string} name\n\t */\n\tenable(name) {\n\t\tutils.logger(logGroup, `project ${name} enabled`);\n\t\tthis.projects[name] = true;\n\t}\n\n\t/**\n\t * Checks whether project is enabled\n\t * @param {string} name\n\t * @returns {boolean}\n\t */\n\tisEnabled(name) {\n\t\treturn !!this.projects[name];\n\t}\n\n\t/**\n\t * Returns all geo-enabled models' definitions based on enabled projects\n\t * @param {string[]} projectNames\n\t * @returns {{models: ModelDefinition[], parameters: Object}}\n\t */\n\tgetEnabledModelsWithParams(projectNames) {\n\t\tconst projects = context.get('services.billTheLizard.projects');\n\t\tconst projectParameters = context.get('services.billTheLizard.parameters');\n\t\tconst enabledProjectNames = Object.keys(projects).filter(\n\t\t\t(name) => this.isEnabled(name) && projectNames.includes(name),\n\t\t);\n\t\tconst models = [];\n\t\tconst parameters = {};\n\n\t\tenabledProjectNames.forEach((name) => {\n\t\t\t// Only first enabled model in project is executable\n\t\t\tlet isNextModelExecutable = true;\n\n\t\t\tprojects[name].forEach((model) => {\n\t\t\t\tif (utils.isProperGeo(model.countries, model.name)) {\n\t\t\t\t\tmodel.executable = isNextModelExecutable;\n\t\t\t\t\tisNextModelExecutable = false;\n\t\t\t\t\tmodels.push(model);\n\t\t\t\t\tObject.assign(parameters, projectParameters[name]);\n\t\t\t\t} else {\n\t\t\t\t\tmodel.executable = false;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn {\n\t\t\tmodels,\n\t\t\tparameters,\n\t\t};\n\t}\n}\n","import { context, eventService, utils } from '@wikia/ad-engine';\nimport { Executor } from './executor';\nimport { ProjectsHandler } from './projects-handler';\n\n/**\n * @typedef {Object} ModelDefinition\n * @property {boolean|undefined} executable\n * @property {string[]} countries\n * @property {string} name\n * @property {function} on_*\n */\n\n/**\n * @typedef {Object} PredictionDefinition\n * @property {string} modelName\n * @property {result} number\n * @property {(number|string)} callId\n */\n\nconst logGroup = 'bill-the-lizard';\nlet openRequests = [];\n\ninterface RequestEvent {\n\tcallId: string | number;\n\tquery: string;\n}\n\ninterface ResponseEvent {\n\tcallId: string | number;\n\tresponse: string;\n}\n\nexport const billThLizardEvents = {\n\tBILL_THE_LIZARD_REQUEST: Symbol('BILL_THE_LIZARD_REQUEST'),\n\tBILL_THE_LIZARD_RESPONSE: Symbol('BILL_THE_LIZARD_RESPONSE'),\n};\n\n/**\n * Builds query parameters for url\n * @param {Object} queryParameters (key-value pairs for query parameters)\n * @returns {string}\n */\nfunction buildQueryUrl(queryParameters) {\n\tconst params = [];\n\n\tObject.keys(queryParameters).forEach((key) => {\n\t\tparams.push(`${key}=${queryParameters[key]}`);\n\t});\n\n\treturn encodeURI(params.join('&'));\n}\n\n/**\n * Builds endpoint url\n * @param {string} host\n * @param {string} endpoint\n * @param {string} query\n * @returns {string}\n */\nfunction buildUrl(host, endpoint, query) {\n\treturn `${host}/${endpoint}?${query}`;\n}\n\n/**\n * Requests service\n * @param {string} host\n * @param {string} endpoint\n * @param {Object} queryParameters (key-value pairs for query parameters)\n * @param {number} timeout\n * @param {number|string} callId\n * @returns {Promise}\n */\nfunction httpRequest(host, endpoint, queryParameters = {}, timeout = 0, callId) {\n\tconst request = new window.XMLHttpRequest();\n\tconst query = buildQueryUrl(queryParameters);\n\tconst url = buildUrl(host, endpoint, query);\n\n\teventService.emit(billThLizardEvents.BILL_THE_LIZARD_REQUEST, {\n\t\tquery,\n\t\tcallId,\n\t} as RequestEvent);\n\n\trequest.open('GET', url, true);\n\trequest.responseType = 'json';\n\trequest.timeout = timeout;\n\n\topenRequests.push(request);\n\n\tutils.logger(logGroup, 'timeout configured to', request.timeout);\n\n\treturn new Promise((resolve, reject) => {\n\t\trequest.addEventListener('timeout', () => {\n\t\t\treject(new Error('timeout'));\n\t\t\tutils.logger(logGroup, 'timed out');\n\t\t});\n\t\trequest.addEventListener('error', () => {\n\t\t\treject(new Error('error'));\n\t\t\tutils.logger(logGroup, 'errored');\n\t\t});\n\t\trequest.onreadystatechange = function () {\n\t\t\tif (this.readyState === 4 && this.status === 200) {\n\t\t\t\tutils.logger(logGroup, 'has response');\n\t\t\t\tresolve(this.response);\n\t\t\t}\n\t\t};\n\t\trequest.send();\n\t});\n}\n\n/**\n * Builds key-value pairs for query parameters\n * @param {ModelDefinition[]} models\n * @param {Object} parameters (key-value pairs)\n * @returns {Object}\n */\nfunction getQueryParameters(models, parameters) {\n\tconst now = new Date();\n\tconst day = now.getDay() - 1;\n\n\treturn Object.assign(\n\t\t{},\n\t\t{\n\t\t\tmodels: models.map((model) => model.name),\n\t\t\th: now.getHours(),\n\t\t\tdow: day === -1 ? 6 : day,\n\t\t},\n\t\tparameters,\n\t);\n}\n\n/**\n * Overrides predictions based on response\n * @param {Object} response\n * @returns {Object}\n */\nfunction overridePredictions(response) {\n\tObject.keys(response).forEach((name) => {\n\t\tconst newValue = utils.queryString.get(`bill.${name}`);\n\n\t\tif (newValue) {\n\t\t\tresponse[name].result = parseInt(newValue, 10);\n\t\t}\n\t});\n\n\treturn response;\n}\n\n/**\n * Bill the Lizard service handler\n */\nexport class BillTheLizard {\n\tstatic FAILURE = 'failure';\n\tstatic NOT_USED = 'not_used';\n\tstatic ON_TIME = 'on_time';\n\tstatic TIMEOUT = 'timeout';\n\tstatic TOO_LATE = 'too_late';\n\tstatic REUSED = 'reused';\n\n\texecutor = new Executor();\n\tprojectsHandler = new ProjectsHandler();\n\ttargetedModelNames = new Set();\n\tcallCounter = 0;\n\tpredictions = [];\n\tstatuses = {};\n\n\treset() {\n\t\tthis.callCounter = 0;\n\t\tthis.predictions = [];\n\t\tthis.statuses = {};\n\n\t\topenRequests.forEach((req) => req.abort());\n\t\topenRequests = [];\n\t\tcontext.remove('targeting.btl');\n\t}\n\n\t/**\n\t * Requests service, executes defined methods and parses response\n\t *\n\t * Supply callKey if you need to access status for this specific request.\n\t * DO NOT use an integer as callKey as it's the default value.\n\t * Good key example: \"incontent_boxad1\".\n\t *\n\t * @param {string[]} projectNames\n\t * @param {string} callId key for this call\n\t * @returns {Promise}\n\t */\n\tcall(projectNames, callId) {\n\t\tif (!context.get('services.billTheLizard.enabled')) {\n\t\t\tutils.logger(logGroup, 'disabled');\n\n\t\t\treturn new Promise((resolve, reject) => reject(new Error('Disabled')));\n\t\t}\n\n\t\tif (!callId) {\n\t\t\tthis.callCounter += 1;\n\t\t\tcallId = this.callCounter;\n\t\t}\n\n\t\tconst host = context.get('services.billTheLizard.host');\n\t\tconst endpoint = context.get('services.billTheLizard.endpoint');\n\t\tconst timeout = context.get('services.billTheLizard.timeout');\n\t\tconst { models, parameters } = this.projectsHandler.getEnabledModelsWithParams(projectNames);\n\n\t\tif (!models || models.length < 1) {\n\t\t\tutils.logger(logGroup, 'no models to predict');\n\t\t\tthis.statuses[callId] = BillTheLizard.NOT_USED;\n\n\t\t\treturn Promise.resolve({});\n\t\t}\n\n\t\t// update names of GAM targeted models\n\t\tmodels\n\t\t\t.filter((model) => model.dfp_targeting)\n\t\t\t.forEach((model) => this.targetedModelNames.add(model.name));\n\n\t\tconst queryParameters = getQueryParameters(models, parameters);\n\n\t\tutils.logger(logGroup, 'calling service', host, endpoint, queryParameters, `callId: ${callId}`);\n\n\t\tthis.statuses[callId] = BillTheLizard.TOO_LATE;\n\n\t\treturn httpRequest(host, endpoint, queryParameters, timeout, callId)\n\t\t\t.catch((error) => {\n\t\t\t\tif (error.message === 'timeout') {\n\t\t\t\t\tthis.statuses[callId] = BillTheLizard.TIMEOUT;\n\t\t\t\t} else {\n\t\t\t\t\tthis.statuses[callId] = BillTheLizard.FAILURE;\n\t\t\t\t}\n\n\t\t\t\treturn Promise.reject(error);\n\t\t\t})\n\t\t\t.then((response) => overridePredictions(response))\n\t\t\t.then((response) => {\n\t\t\t\tutils.logger(logGroup, 'service response OK', `callId: ${callId}`);\n\n\t\t\t\tthis.statuses[callId] = BillTheLizard.ON_TIME;\n\n\t\t\t\tconst modelToResultMap = this.getModelToResultMap(response);\n\n\t\t\t\tutils.logger(logGroup, 'predictions', modelToResultMap, `callId: ${callId}`);\n\n\t\t\t\tconst predictions = this.buildPredictions(models, modelToResultMap, callId);\n\n\t\t\t\tthis.predictions.push(...predictions);\n\n\t\t\t\tthis.setTargeting();\n\n\t\t\t\teventService.emit(billThLizardEvents.BILL_THE_LIZARD_RESPONSE, {\n\t\t\t\t\tcallId,\n\t\t\t\t\tresponse: this.serialize(callId),\n\t\t\t\t} as ResponseEvent);\n\n\t\t\t\tthis.executor.executeMethods(models, response);\n\n\t\t\t\treturn modelToResultMap;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tutils.logger(logGroup, 'service response', error.message, `callId: ${callId}`);\n\n\t\t\t\treturn {};\n\t\t\t});\n\t}\n\n\t/**\n\t *\n\t * @param {ModelDefinition[]} models\n\t * @param {Object.<string, number>} modelToResultMap\n\t * @param {number|string} callId\n\t * @returns {PredictionDefinition[]}\n\t */\n\tbuildPredictions(models, modelToResultMap, callId) {\n\t\treturn models\n\t\t\t.map((model) => model.name)\n\t\t\t.filter((modelName) => modelToResultMap[modelName] !== undefined)\n\t\t\t.map((modelName) => ({ modelName, callId, result: modelToResultMap[modelName] }));\n\t}\n\n\t/**\n\t * Converts response to predictions\n\t * @param {Object} response\n\t * @returns {PredictionDefinition}\n\t */\n\tgetModelToResultMap(response) {\n\t\tconst modelToResultMap = {};\n\n\t\tObject.keys(response).forEach((modelName) => {\n\t\t\tconst { result } = response[modelName];\n\n\t\t\tif (typeof result !== 'undefined') {\n\t\t\t\tmodelToResultMap[modelName] = result;\n\t\t\t}\n\t\t});\n\n\t\treturn modelToResultMap;\n\t}\n\n\t/**\n\t * Sets DFP targeting in context.\n\t *\n\t * @returns string\n\t */\n\tsetTargeting() {\n\t\tconst targeting = this.getTargeting();\n\n\t\tif (Object.keys(targeting).length > 0) {\n\t\t\tconst serializedTargeting = Object.entries(targeting).map(\n\t\t\t\t([modelName, result]) => `${modelName}_${result}`,\n\t\t\t);\n\n\t\t\tcontext.set('targeting.btl', serializedTargeting);\n\n\t\t\treturn serializedTargeting;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t/**\n\t * Returns map of targeted models to their results.\n\t *\n\t * For each model, it takes the latest result.\n\t *\n\t * @returns {Object.<string, number>}\n\t */\n\tgetTargeting() {\n\t\tconst latestResults = {};\n\n\t\tthis.predictions\n\t\t\t.filter((pred) => this.targetedModelNames.has(pred.modelName))\n\t\t\t.forEach((pred) => {\n\t\t\t\tlatestResults[pred.modelName] = pred.result;\n\t\t\t});\n\n\t\treturn latestResults;\n\t}\n\n\t/**\n\t * Get prediction by modelName and callId.\n\t *\n\t * @param {string} modelName\n\t * @param {(number|string)} callId\n\t * @returns {PredictionDefinition}\n\t */\n\tgetPrediction(modelName, callId) {\n\t\treturn this.getPredictions(modelName).find((pred) => pred.callId === callId);\n\t}\n\n\t/**\n\t * Returns predictions optionally filtered by model name.\n\t *\n\t * If model name is given, it returns all predictions with models matching.\n\t * Model matches when raw name (without version) is matched.\n\t *\n\t * @param {string} [modelName]\n\t * @returns {PredictionDefinition[]}\n\t */\n\tgetPredictions(modelName) {\n\t\tconst separator = ':';\n\n\t\tif (modelName) {\n\t\t\treturn this.predictions.filter(\n\t\t\t\t(pred) => pred.modelName.split(separator)[0] === modelName.split(separator)[0],\n\t\t\t);\n\t\t}\n\n\t\treturn this.predictions;\n\t}\n\n\t/**\n\t * Returns response status (one of: failure, not_used, on_time, timeout, too_late or undefined);\n\t *\n\t * If callId is not supplied, the latest response without a specific key is returned.\n\t *\n\t * @param {number|string} [callId] value passed as key for call\n\t * @returns {string}\n\t */\n\tgetResponseStatus(callId) {\n\t\tcallId = callId || this.callCounter;\n\n\t\treturn this.statuses[callId];\n\t}\n\n\t/**\n\t * Serializes all predictions\n\t * @param {number|string} [callId]\n\t * @returns {string}\n\t */\n\tserialize(callId) {\n\t\tlet { predictions } = this;\n\n\t\tif (callId !== undefined) {\n\t\t\tpredictions = predictions.filter((pred) => pred.callId === callId);\n\t\t}\n\n\t\treturn predictions.map((pred) => `${pred.modelName}|${pred.callId}=${pred.result}`).join(',');\n\t}\n\n\t/**\n\t * Get prediction of previous calls.\n\t *\n\t * Uses a supplied callIdBuilder to construct callId\n\t * by iterating down from startId to 2.\n\t *\n\t * @param {number} startId\n\t * @param {function} callIdBuilder\n\t * @param {string} modelName\n\t * @returns {number | undefined}\n\t */\n\tgetPreviousPrediction(startId, callIdBuilder, modelName) {\n\t\tif (startId <= 1) {\n\t\t\treturn undefined;\n\t\t}\n\t\tfor (let backCounter = startId - 1; backCounter >= 1; backCounter--) {\n\t\t\tconst callId = callIdBuilder(backCounter);\n\t\t\tconst prevStatus = this.getResponseStatus(callId);\n\n\t\t\tif (prevStatus === BillTheLizard.ON_TIME || prevStatus === BillTheLizard.TOO_LATE) {\n\t\t\t\treturn this.getPrediction(modelName, callId);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nexport const billTheLizard = new BillTheLizard();\n","import { context, utils } from '@wikia/ad-engine';\n\nconst logGroup = 'confiant';\nconst scriptDomain = 'clarium.global.ssl.fastly.net';\n\n/**\n * Injects Confiant script\n * @returns {Promise}\n */\nfunction loadScript() {\n\tconst confiantLibraryUrl = `//${scriptDomain}/gpt/a/wrap.js`;\n\n\treturn utils.scriptLoader.loadScript(confiantLibraryUrl, 'text/javascript', true, 'first');\n}\n\n/**\n * Confiant service handler\n */\nclass Confiant {\n\t/**\n\t * Requests service and injects script tag\n\t * @returns {Promise}\n\t */\n\tcall() {\n\t\tconst propertyId = context.get('services.confiant.propertyId');\n\t\tconst mapping = context.get('services.confiant.mapping');\n\t\tconst activation = context.get('services.confiant.activation');\n\n\t\tif (!context.get('services.confiant.enabled') || !propertyId || !mapping || !activation) {\n\t\t\tutils.logger(logGroup, 'disabled');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tutils.logger(logGroup, 'loading');\n\n\t\t// eslint-disable-next-line  no-underscore-dangle\n\t\twindow._clrm = window._clrm || {};\n\t\t// eslint-disable-next-line  no-underscore-dangle\n\t\twindow._clrm.gpt = {\n\t\t\tpropertyId,\n\t\t\tconfiantCdn: scriptDomain,\n\t\t\tsandbox: 0,\n\t\t\tmapping,\n\t\t\tactivation,\n\t\t\tcallback: (...args) => {\n\t\t\t\tutils.logger(logGroup, args);\n\t\t\t},\n\t\t};\n\n\t\treturn loadScript().then(() => {\n\t\t\tutils.logger(logGroup, 'ready');\n\t\t});\n\t}\n}\n\nexport const confiant = new Confiant();\n","import { context, utils } from '@wikia/ad-engine';\n\nconst logGroup = 'geo-edge';\nconst scriptDomainId = 'd3b02estmut877';\n\n/**\n * Injects Geo Edge Site Side Protection script\n * @returns {Promise}\n */\nfunction loadScript() {\n\tconst geoEdgeLibraryUrl = `//${scriptDomainId}.cloudfront.net/grumi-ip.js`;\n\n\treturn utils.scriptLoader.loadScript(geoEdgeLibraryUrl, 'text/javascript', true, 'first');\n}\n\n/**\n * GeoEdge service handler\n */\nclass GeoEdge {\n\t/**\n\t * Requests service and injects script tag\n\t * @returns {Promise}\n\t */\n\tcall() {\n\t\tconst geoEdgeKey = context.get('services.geoEdge.id');\n\t\tconst geoEdgeConfig = context.get('services.geoEdge.config');\n\n\t\tif (!context.get('services.geoEdge.enabled') || !geoEdgeKey) {\n\t\t\tutils.logger(logGroup, 'disabled');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tutils.logger(logGroup, 'loading');\n\t\twindow.grumi = {\n\t\t\tcfg: geoEdgeConfig,\n\t\t\tkey: geoEdgeKey,\n\t\t};\n\n\t\treturn loadScript().then(() => {\n\t\t\tutils.logger(logGroup, 'ready');\n\t\t});\n\t}\n}\n\nexport const geoEdge = new GeoEdge();\n","import { context, utils } from '@wikia/ad-engine';\n\nconst logGroup = 'krux';\n\n/**\n * Injects Krux script\n * @returns {Promise}\n */\nfunction loadScript() {\n\tconst kruxId = context.get('services.krux.id');\n\tconst kruxLibraryUrl = `//cdn.krxd.net/controltag?confid=${kruxId}`;\n\n\treturn utils.scriptLoader.loadScript(kruxLibraryUrl, 'text/javascript', true, 'first', {\n\t\tid: 'krux-control-tag',\n\t});\n}\n\n/**\n * Gets Krux data from localStorage\n * @param {string} key\n * @returns {string}\n */\nfunction getKruxData(key) {\n\tif (window.localStorage) {\n\t\treturn window.localStorage[key];\n\t}\n\tif (window.navigator.cookieEnabled) {\n\t\tconst match = document.cookie.match(`${key}=([^;]*)`);\n\n\t\treturn (match && decodeURI(match[1])) || '';\n\t}\n\n\treturn '';\n}\n\nwindow.Krux =\n\twindow.Krux ||\n\tfunction (...args) {\n\t\twindow.Krux.q.push(args);\n\t};\nwindow.Krux.q = window.Krux.q || [];\n\n/**\n * Krux service handler\n */\nclass Krux {\n\t/**\n\t * Requests service, saves user id and segments in context and exports page level params\n\t * @returns {Promise}\n\t */\n\tcall() {\n\t\tif (!context.get('services.krux.enabled') || !context.get('options.trackingOptIn')) {\n\t\t\tutils.logger(logGroup, 'disabled');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tutils.logger(logGroup, 'loading');\n\n\t\treturn loadScript().then(() => {\n\t\t\tthis.exportPageParams();\n\t\t\tthis.importUserData();\n\t\t});\n\t}\n\n\t/**\n\t * Export page level params to Krux\n\t * @returns {void}\n\t */\n\texportPageParams() {\n\t\tObject.keys(context.get('targeting')).forEach((key) => {\n\t\t\tconst value = context.get(`targeting.${key}`);\n\n\t\t\tif (value) {\n\t\t\t\twindow[`kruxDartParam_${key}`] = value;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Imports Krux data from localStorage\n\t * @returns {void}\n\t */\n\timportUserData() {\n\t\tconst user = getKruxData('kxuser') || getKruxData('kxwikia_user');\n\t\tconst segments = getKruxData('kxsegs') || getKruxData('kxwikia_segs');\n\n\t\tcontext.set('targeting.kuid', user || null);\n\t\tcontext.set('targeting.ksg', segments ? segments.split(',') : []);\n\t\tutils.logger(logGroup, 'data set', user, segments);\n\t}\n\n\t/**\n\t * Returns Krux user ID\n\t * @returns {string}\n\t */\n\tgetUserId() {\n\t\treturn context.get('targeting.kuid') || null;\n\t}\n\n\t/**\n\t * Returns Krux segments\n\t * @returns {string[]}\n\t */\n\tgetSegments() {\n\t\treturn context.get('targeting.ksg') || [];\n\t}\n}\n\nexport const krux = new Krux();\n","import { context, eventService, utils } from '@wikia/ad-engine';\n\nconst logGroup = 'moat-yi';\n\nexport const moatYiEvents = {\n\tMOAT_YI_READY: Symbol('MOAT_YI_READY'),\n};\n\n/**\n * Injects MOAT YI script\n * @returns {Promise}\n */\nfunction loadScript() {\n\tconst partnerCode = context.get('services.moatYi.partnerCode');\n\tconst url = `//z.moatads.com/${partnerCode}/yi.js`;\n\n\treturn utils.scriptLoader.loadScript(url, 'text/javascript', true, 'first');\n}\n\n/**\n * MOAT YI service handler\n */\nclass MoatYi {\n\t/**\n\t * Requests MOAT YI service and saves page level data in targeting\n\t * @returns {Promise}\n\t */\n\tcall() {\n\t\tif (!context.get('services.moatYi.enabled') || !context.get('services.moatYi.partnerCode')) {\n\t\t\tutils.logger(logGroup, 'disabled');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tlet moatYeildReadyResolve;\n\t\tconst promise = new Promise((resolve) => {\n\t\t\tmoatYeildReadyResolve = resolve;\n\t\t});\n\n\t\tutils.logger(logGroup, 'loading');\n\t\twindow.moatYieldReady = () => {\n\t\t\tthis.importPageParams();\n\t\t\tmoatYeildReadyResolve();\n\t\t};\n\t\tcontext.set('targeting.m_data', 'waiting');\n\n\t\tloadScript().then(() => {\n\t\t\tutils.logger(logGroup, 'ready');\n\t\t});\n\n\t\treturn promise;\n\t}\n\n\t/**\n\t * Adds page params to targeting\n\t * @returns {void}\n\t */\n\timportPageParams() {\n\t\tif (\n\t\t\twindow.moatPrebidApi &&\n\t\t\ttypeof window.moatPrebidApi.getMoatTargetingForPage === 'function'\n\t\t) {\n\t\t\tconst pageParams = window.moatPrebidApi.getMoatTargetingForPage() || {};\n\n\t\t\tcontext.set('targeting.m_data', pageParams.m_data);\n\t\t\teventService.emit(moatYiEvents.MOAT_YI_READY, `m_data=${pageParams.m_data}`);\n\t\t\tutils.logger(logGroup, 'moatYieldReady', pageParams);\n\t\t}\n\t}\n}\n\nexport const moatYi = new MoatYi();\n","// NIELSEN CODE START\n// eslint-disable-next-line\nexport function initNielsenStaticQueue(){!function(t,n){t[n]=t[n]||{nlsQ:function(e,o,c,r,s,i){return s=t.document,r=s.createElement(\"script\"),r.async=1,r.src=(\"http:\"===t.location.protocol?\"http:\":\"https:\")+\"//cdn-gl.imrworldwide.com/conf/\"+e+\".js#name=\"+o+\"&ns=\"+n,i=s.getElementsByTagName(\"script\")[0],i.parentNode.insertBefore(r,i),t[n][o]=t[n][o]||{g:c||{},ggPM:function(e,c,r,s,i){(t[n][o].q=t[n][o].q||[]).push([e,c,r,s,i])}},t[n][o]}}}(window,\"NOLBUNDLE\");}\n// NIELSEN CODE END\n","/* global NOLBUNDLE */\nimport { context, utils } from '@wikia/ad-engine';\nimport { initNielsenStaticQueue } from './static-queue-script';\n\nconst logGroup = 'nielsen-dcr';\nconst nlsnConfig: {[key: string]: any} = {};\n\n/**\n * Creates Nielsen Static Queue Snippet\n */\nfunction createInstance(nielsenKey) {\n\tutils.logger(logGroup, 'loading');\n\n\tinitNielsenStaticQueue();\n\n\treturn NOLBUNDLE.nlsQ(nielsenKey, 'nlsnInstance', nlsnConfig);\n}\n\n/**\n * Nielsen service handler\n */\nclass Nielsen {\n\n\tnlsnInstance: any = null;\n\t/**\n\t * Class constructor\n\t */\n\n\tconstructor() {\n\n\t\tif (utils.queryString.get('nielsen-dcr-debug') === '1') {\n\t\t\tnlsnConfig.nol_sdkDebug = 'debug';\n\t\t}\n\t}\n\n\t/**\n\t * Create Nielsen Static Queue and make a call\n\t * @param {Object} nielsenMetadata\n\t * @returns {Object}\n\t */\n\tcall(nielsenMetadata) {\n\t\tconst nielsenKey = context.get('services.nielsen.appId');\n\n\t\tif (!context.get('services.nielsen.enabled') || !nielsenKey) {\n\t\t\tutils.logger(logGroup, 'disabled');\n\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this.nlsnInstance) {\n\t\t\tthis.nlsnInstance = createInstance(nielsenKey);\n\t\t}\n\n\t\tutils.logger(logGroup, 'ready');\n\n\t\tthis.nlsnInstance.ggPM('staticstart', nielsenMetadata);\n\n\t\tutils.logger(logGroup, 'called', nielsenMetadata);\n\n\t\treturn this.nlsnInstance;\n\t}\n}\n\nexport const nielsen = new Nielsen();\n","export * from './bill-the-lizard';\nexport * from './confiant';\nexport * from './geo-edge';\nexport * from './krux';\nexport * from './moat-yi';\nexport * from './nielsen';\n"],"sourceRoot":""}